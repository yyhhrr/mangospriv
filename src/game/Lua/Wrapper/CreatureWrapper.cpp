#include "../../pchdef.h"
#include "../LuaInclude.h"
#include <luabind/luabind.hpp>

#include "CreatureWrapper.h"
#include "../../Creature.h"
#include "../../SpellAuras.h"
#include "../../CreatureAI.h"
#include "../../CreatureGroups.h"
#include "../../DynamicObject.h"
#include "../../InstanceData.h"
#include "../../Spell.h"
#include "../../Totem.h"
#include "../../ZoneScript.h"

namespace Lua
{
	namespace CreatureWrapper
	{
		void Wrap(lua_State* L)
		{
			using namespace luabind;

			open(L);

			module(L)
			[
				class_<Creature>("Creature")

				//Object Functions
				.def("IsInWorld", &WorldObject::IsInWorld)
				.def("AddToWorld", &WorldObject::AddToWorld)
				.def("RemoveFromWorld", &WorldObject::RemoveFromWorld)
				.def("ClearUpdateMask", &WorldObject::ClearUpdateMask)
				.def("GetObjectGuid", &WorldObject::GetObjectGuid)
				.def("GetGUID", &WorldObject::GetGUID)
				.def("GetGUIDLow", &WorldObject::GetGUIDLow)
				.def("GetPackGUID", &WorldObject::GetPackGUID)
				.def("GetGuidStr", &WorldObject::GetGuidStr)
				.def("GetEntry", &WorldObject::GetEntry)
				.def("SetEntry", &WorldObject::SetEntry)
				.def("GetObjectScale", &WorldObject::GetObjectScale)
				.def("SetObjectScale", &WorldObject::SetObjectScale)
				.def("GetTypeId", &WorldObject::GetTypeId)
				.def("isType", &WorldObject::isType)
				.def("BuildCreateUpdateBlockForPlayer", &WorldObject::BuildCreateUpdateBlockForPlayer)
				.def("SendCreateUpdateToPlayer", &WorldObject::SendCreateUpdateToPlayer)
				.def("AddToClientUpdateList", &WorldObject::AddToClientUpdateList)
				.def("RemoveFromClientUpdateList", &WorldObject::RemoveFromClientUpdateList)
				.def("BuildUpdateData", &WorldObject::BuildUpdateData)
				.def("MarkForClientUpdate", &WorldObject::MarkForClientUpdate)
				.def("SendForcedObjectUpdate", &WorldObject::SendForcedObjectUpdate)
				.def("BuildValuesUpdateBlockForPlayer", &WorldObject::BuildValuesUpdateBlockForPlayer)
				.def("BuildOutOfRangeUpdateBlock", &WorldObject::BuildOutOfRangeUpdateBlock)
				.def("BuildMovementUpdateBlock", &WorldObject::BuildMovementUpdateBlock)
				.def("DestroyForPlayer", &WorldObject::DestroyForPlayer)
				.def("GetInt32Value", &WorldObject::GetInt32Value)
				.def("GetUInt32Value", &WorldObject::GetUInt32Value)
				.def("GetUInt64Value", &WorldObject::GetUInt64Value)
				.def("GetFloatValue", &WorldObject::GetFloatValue)
				.def("SetBoundingValue", &WorldObject::SetBoundingValue)
				.def("GetByteValue", &WorldObject::GetByteValue)
				.def("GetUInt16Value", &WorldObject::GetUInt16Value)
				.def("GetGuidValue", &WorldObject::GetGuidValue)
				.def("SetInt32Value", &WorldObject::SetInt32Value)
				.def("SetUInt32Value", &WorldObject::SetUInt32Value)
				.def("SetUInt64Value", &WorldObject::SetUInt64Value)
				.def("SetFloatValue", &WorldObject::SetFloatValue)
				.def("SetByteValue", &WorldObject::SetByteValue)
				.def("SetUInt16Value", &WorldObject::SetUInt16Value)
				.def("SetInt16Value", &WorldObject::SetInt16Value)
				.def("SetGuidValue", &WorldObject::SetGuidValue)
				.def("SetStatFloatValue", &WorldObject::SetStatFloatValue)
				.def("SetStatInt32Value", &WorldObject::SetStatInt32Value)
				.def("ApplyModUInt32Value", &WorldObject::ApplyModUInt32Value)
				.def("ApplyModInt32Value", &WorldObject::ApplyModInt32Value)
				.def("ApplyModUInt64Value", &WorldObject::ApplyModUInt64Value)
				.def("ApplyModPositiveFloatValue", &WorldObject::ApplyModPositiveFloatValue)
				.def("ApplyModSignedFloatValue", &WorldObject::ApplyModSignedFloatValue)
				.def("ApplyPercentModFloatValue", &WorldObject::ApplyPercentModFloatValue)
				.def("SetFlag", &WorldObject::SetFlag)
				.def("RemoveFlag", &WorldObject::RemoveFlag)
				.def("ToggleFlag", &WorldObject::ToggleFlag)
				.def("HasFlag", &WorldObject::HasFlag)
				.def("ApplyModFlag", &WorldObject::ApplyModFlag)
				.def("SetByteFlag", &WorldObject::SetByteFlag)
				.def("RemoveByteFlag", &WorldObject::RemoveByteFlag)
				.def("ToggleByteFlag", &WorldObject::ToggleByteFlag)
				.def("HasByteFlag", &WorldObject::HasByteFlag)
				.def("ApplyModByteFlag", &WorldObject::ApplyModByteFlag)
				.def("SetShortFlag", &WorldObject::SetShortFlag)
				.def("RemoveShortFlag", &WorldObject::RemoveShortFlag)
				.def("ToggleShortFlag", &WorldObject::ToggleShortFlag)
				.def("HasShortFlag", &WorldObject::HasShortFlag)
				.def("ApplyModShortFlag", &WorldObject::ApplyModShortFlag)
				.def("SetFlag64", &WorldObject::SetFlag64)
				.def("RemoveFlag64", &WorldObject::RemoveFlag64)
				.def("ToggleFlag64", &WorldObject::ToggleFlag64)
				.def("HasFlag64", &WorldObject::HasFlag64)
				.def("ApplyModFlag64", &WorldObject::ApplyModFlag64)
				.def("LoadValues", &WorldObject::LoadValues)
				.def("GetValuesCount", &WorldObject::GetValuesCount)
				.def("InitValues", &WorldObject::InitValues)

				//WorldObject Functions
				.def("Relocate", static_cast<void(WorldObject::*)(float, float, float, float)>(&WorldObject::Relocate))
				.def("Relocate", static_cast<void(WorldObject::*)(float, float, float)>(&WorldObject::Relocate))
				.def("SetOrientation", &WorldObject::SetOrientation)
				.def("GetPositionX", &WorldObject::GetPositionX)
				.def("GetPositionY", &WorldObject::GetPositionY)
				.def("GetPositionZ", &WorldObject::GetPositionZ)
				//.def("GetPosition", &WorldObject::GetPosition)
				//.def("GetPosition", &WorldObject::GetPosition)
				.def("GetOrientation", &WorldObject::GetOrientation)
				.def("GetNearPoint2D", &WorldObject::GetNearPoint2D)
				.def("GetNearPoint", &WorldObject::GetNearPoint)
				.def("GetClosePoint", &WorldObject::GetClosePoint)
				.def("GetNearPoint", &WorldObject::GetNearPoint)
				.def("GetContactPoint", &WorldObject::GetContactPoint)
				.def("GetNearPoint", &WorldObject::GetNearPoint)
				.def("GetObjectBoundingRadius", &WorldObject::GetObjectBoundingRadius)
				.def("IsPositionValid", &WorldObject::IsPositionValid)
				.def("UpdateGroundPositionZ", &WorldObject::UpdateGroundPositionZ)
				.def("UpdateAllowedPositionZ", &WorldObject::UpdateAllowedPositionZ)
				.def("GetRandomPoint", &WorldObject::GetRandomPoint)
				.def("GetMapId", &WorldObject::GetMapId)
				.def("GetInstanceId", &WorldObject::GetInstanceId)
				.def("GetZoneId", &WorldObject::GetZoneId)
				.def("GetAreaId", &WorldObject::GetAreaId)
				.def("GetZoneAndAreaId", &WorldObject::GetZoneAndAreaId)
				.def("GetInstanceData", &WorldObject::GetInstanceData)
				.def("GetName", &WorldObject::GetName)
				.def("SetName", &WorldObject::SetName)
				.def("GetNameForLocaleIdx", &WorldObject::GetNameForLocaleIdx)
				.def("GetDistance", static_cast<float(WorldObject::*)(const WorldObject*) const>(&WorldObject::GetDistance))
				.def("GetDistanceSqr", &WorldObject::GetDistanceSqr)
				.def("GetDistance", static_cast<float(WorldObject::*)(float, float, float) const>(&WorldObject::GetDistance))
				.def("GetDistance2d", static_cast<float(WorldObject::*)(const WorldObject*) const>(&WorldObject::GetDistance2d))
				.def("GetDistance2d", static_cast<float(WorldObject::*)(float, float) const>(&WorldObject::GetDistance2d))
				.def("GetDistanceZ", &WorldObject::GetDistanceZ)
				.def("IsInMap", &WorldObject::IsInMap)
				.def("IsWithinDist3d", &WorldObject::IsWithinDist3d)
				.def("IsWithinDist2d", &WorldObject::IsWithinDist2d)
				.def("_IsWithinDist", &WorldObject::_IsWithinDist)
				.def("IsWithinDist", &WorldObject::IsWithinDist)
				.def("_IsWithinDist", &WorldObject::_IsWithinDist)
				.def("IsWithinDistInMap", &WorldObject::IsWithinDistInMap)
				.def("IsInMap", &WorldObject::IsInMap)
				.def("IsWithinLOS", &WorldObject::IsWithinLOS)
				.def("IsWithinLOSInMap", &WorldObject::IsWithinLOSInMap)
				.def("GetDistanceOrder", &WorldObject::GetDistanceOrder)
				.def("IsInRange", &WorldObject::IsInRange)
				.def("IsInRange2d", &WorldObject::IsInRange2d)
				.def("IsInRange3d", &WorldObject::IsInRange3d)
				.def("GetAngle", static_cast<float(WorldObject::*)(float, float) const>(&WorldObject::GetAngle))
				.def("GetAngle", static_cast<float(WorldObject::*)(const WorldObject*) const>(&WorldObject::GetAngle))
				.def("HasInArc", static_cast<bool(WorldObject::*)(float, float, float) const>(&WorldObject::HasInArc))
				.def("HasInArc", static_cast<bool(WorldObject::*)(float, const WorldObject*) const>(&WorldObject::HasInArc))
				.def("isInFrontInMap", &WorldObject::isInFrontInMap)
				.def("isInBackInMap", &WorldObject::isInBackInMap)
				.def("isInFront", &WorldObject::isInFront)
				.def("isInBack", &WorldObject::isInBack)
				.def("CleanupsBeforeDelete", &WorldObject::CleanupsBeforeDelete)
				.def("SendMessageToSet", &WorldObject::SendMessageToSet)
				.def("SendMessageToSetInRange", &WorldObject::SendMessageToSetInRange)
				.def("SendMessageToSetExcept", &WorldObject::SendMessageToSetExcept)
				.def("MonsterSay", static_cast<void(WorldObject::*)(const char*, uint32, Unit*)>(&WorldObject::MonsterSay))
				.def("MonsterYell", static_cast<void(WorldObject::*)(const char*, uint32, Unit*)>(&WorldObject::MonsterYell))
				.def("MonsterTextEmote", static_cast<void(WorldObject::*)(const char*, Unit*, bool)>(&WorldObject::MonsterTextEmote))
				.def("MonsterWhisper", static_cast<void(WorldObject::*)(const char*, Unit*, bool)>(&WorldObject::MonsterWhisper))
				.def("MonsterSay", static_cast<void(WorldObject::*)(int32, uint32, Unit*)>(&WorldObject::MonsterSay))
				.def("MonsterYell", static_cast<void(WorldObject::*)(int32, uint32, Unit*)>(&WorldObject::MonsterYell))
				.def("MonsterTextEmote", static_cast<void(WorldObject::*)(int32, Unit*, bool)>(&WorldObject::MonsterTextEmote))
				.def("MonsterWhisper", static_cast<void(WorldObject::*)(int32, Unit*, bool)>(&WorldObject::MonsterWhisper))
				.def("MonsterYellToZone", &WorldObject::MonsterYellToZone)
				.def("BuildMonsterChat", &WorldObject::BuildMonsterChat)
				.def("PlayDistanceSound", &WorldObject::PlayDistanceSound)
				.def("PlayDirectSound", &WorldObject::PlayDirectSound)
				.def("SendObjectDeSpawnAnim", &WorldObject::SendObjectDeSpawnAnim)
				.def("SendGameObjectCustomAnim", &WorldObject::SendGameObjectCustomAnim)
				.def("IsHostileTo", &WorldObject::IsHostileTo)
				.def("IsFriendlyTo", &WorldObject::IsFriendlyTo)
				.def("IsControlledByPlayer", &WorldObject::IsControlledByPlayer)
				.def("SaveRespawnTime", &WorldObject::SaveRespawnTime)
				.def("AddObjectToRemoveList", &WorldObject::AddObjectToRemoveList)
				.def("UpdateObjectVisibility", &WorldObject::UpdateObjectVisibility)
				.def("UpdateVisibilityAndView", &WorldObject::UpdateVisibilityAndView)
				.def("isVisibleFor", &WorldObject::isVisibleFor)
				.def("isVisibleForInState", &WorldObject::isVisibleForInState)
				.def("SetMap", &WorldObject::SetMap)
				.def("GetMap", &WorldObject::GetMap)
				.def("FindMap", &WorldObject::FindMap)
				.def("ResetMap", &WorldObject::ResetMap)
				.def("GetTerrain", &WorldObject::GetTerrain)
				.def("SetZoneScript", &WorldObject::SetZoneScript)
				.def("GetZoneScript", &WorldObject::GetZoneScript)
				.def("AddToClientUpdateList", &WorldObject::AddToClientUpdateList)
				.def("RemoveFromClientUpdateList", &WorldObject::RemoveFromClientUpdateList)
				.def("BuildUpdateData", &WorldObject::BuildUpdateData)
				.def("SummonCreature", &WorldObject::SummonCreature)
				.def("SummonObject", &WorldObject::SummonObject)
				.def("isActiveObject", &WorldObject::isActiveObject)
				.def("SetActiveObjectState", &WorldObject::SetActiveObjectState)
				.def("GetViewPoint", &WorldObject::GetViewPoint)
				.def("PrintCoordinatesError", &WorldObject::PrintCoordinatesError)

				//Unit Functions
				.def("AddToWorld", &Unit::AddToWorld)
				.def("RemoveFromWorld", &Unit::RemoveFromWorld)
				.def("CleanupsBeforeDelete", &Unit::CleanupsBeforeDelete)
				.def("GetObjectBoundingRadius", &Unit::GetObjectBoundingRadius)
				.def("getFearManager", &Unit::getFearManager)
				.def("GetDiminishing", &Unit::GetDiminishing)
				.def("IncrDiminishing", &Unit::IncrDiminishing)
				.def("ApplyDiminishingToDuration", &Unit::ApplyDiminishingToDuration)
				.def("ApplyDiminishingAura", &Unit::ApplyDiminishingAura)
				.def("ClearDiminishings", &Unit::ClearDiminishings)
				.def("Update", &Unit::Update)
				.def("setAttackTimer", &Unit::setAttackTimer)
				.def("resetAttackTimer", &Unit::resetAttackTimer)
				.def("getAttackTimer", &Unit::getAttackTimer)
				.def("isAttackReady", &Unit::isAttackReady)
				.def("haveOffhandWeapon", &Unit::haveOffhandWeapon)
				.def("UpdateMeleeAttackingState", &Unit::UpdateMeleeAttackingState)
				.def("CanUseEquippedWeapon", &Unit::CanUseEquippedWeapon)
				.def("GetCombatReach", &Unit::GetCombatReach)
				.def("CanReachWithMeleeAttack", &Unit::CanReachWithMeleeAttack)
				.def("_addAttacker", &Unit::_addAttacker)
				.def("_removeAttacker", &Unit::_removeAttacker)
				.def("getAttackerForHelper", &Unit::getAttackerForHelper)
				.def("Attack", &Unit::Attack)
				.def("AttackedBy", &Unit::AttackedBy)
				.def("CastStop", &Unit::CastStop)
				.def("GetCombatDistance", static_cast<bool(Unit::*)(Unit*)>(&Creature::AttackStop))
				.def("GetCombatDistance", static_cast<bool(Unit::*)(bool)>(&Creature::AttackStop))
				.def("RemoveAllAttackers", &Unit::RemoveAllAttackers)
				.def("getAttackers", &Unit::getAttackers)
				.def("isAttackingPlayer", &Unit::isAttackingPlayer)
				.def("getVictim", &Unit::getVictim)
				.def("CombatStop", &Unit::CombatStop)
				.def("CombatStopWithPets", &Unit::CombatStopWithPets)
				.def("StopAttackFaction", &Unit::StopAttackFaction)
				.def("StopAttackObject", &Unit::StopAttackObject)
				.def("SelectRandomUnfriendlyTarget", &Unit::SelectRandomUnfriendlyTarget)
				.def("SelectRandomFriendlyTarget", &Unit::SelectRandomFriendlyTarget)
				.def("hasNegativeAuraWithInterruptFlag", &Unit::hasNegativeAuraWithInterruptFlag)
				.def("SendMeleeAttackStop", &Unit::SendMeleeAttackStop)
				.def("SendMeleeAttackStart", &Unit::SendMeleeAttackStart)
				.def("Evade", &Unit::Evade)
				.def("EvadeStart", &Unit::EvadeStart)
				.def("EvadeStop", &Unit::EvadeStop)
				.def("isEvading", &Unit::isEvading)
				.def("addUnitState", &Unit::addUnitState)
				.def("hasUnitState", &Unit::hasUnitState)
				.def("clearUnitState", &Unit::clearUnitState)
				.def("CanFreeMove", &Unit::CanFreeMove)
				.def("getLevel", &Unit::getLevel)
				.def("GetLevelForTarget", &Unit::GetLevelForTarget)
				.def("SetLevel", &Unit::SetLevel)
				.def("getRace", &Unit::getRace)
				.def("getRaceMask", &Unit::getRaceMask)
				.def("getClass", &Unit::getClass)
				.def("getClassMask", &Unit::getClassMask)
				.def("getGender", &Unit::getGender)
				.def("GetStat", &Unit::GetStat)
				.def("SetStat", &Unit::SetStat)
				.def("GetArmor", &Unit::GetArmor)
				.def("SetArmor", &Unit::SetArmor)
				.def("GetResistance", &Unit::GetResistance)
				.def("SetResistance", &Unit::SetResistance)
				.def("GetHealth", &Unit::GetHealth)
				.def("GetMaxHealth", &Unit::GetMaxHealth)
				.def("GetHealthPercent", &Unit::GetHealthPercent)
				.def("SetHealth", &Unit::SetHealth)
				.def("SetMaxHealth", &Unit::SetMaxHealth)
				.def("SetHealthPercent", &Unit::SetHealthPercent)
				.def("ModifyHealth", &Unit::ModifyHealth)
				.def("getPowerType", &Unit::getPowerType)
				.def("setPowerType", &Unit::setPowerType)
				.def("GetPower", &Unit::GetPower)
				.def("GetMaxPower", &Unit::GetMaxPower)
				.def("SetPower", &Unit::SetPower)
				.def("SetMaxPower", &Unit::SetMaxPower)
				.def("ModifyPower", &Unit::ModifyPower)
				.def("ApplyPowerMod", &Unit::ApplyPowerMod)
				.def("ApplyMaxPowerMod", &Unit::ApplyMaxPowerMod)
				.def("GetAttackTime", &Unit::GetAttackTime)
				.def("SetAttackTime", &Unit::SetAttackTime)
				.def("ApplyAttackTimePercentMod", &Unit::ApplyAttackTimePercentMod)
				.def("ApplyCastTimePercentMod", &Unit::ApplyCastTimePercentMod)
				.def("GetSheath", &Unit::GetSheath)
				.def("SetSheath", &Unit::SetSheath)
				.def("getFaction", &Unit::getFaction)
				.def("setFaction", &Unit::setFaction)
				.def("getFactionTemplateEntry", &Unit::getFactionTemplateEntry)
				.def("IsHostileTo", &Unit::IsHostileTo)
				.def("IsHostileToPlayers", &Unit::IsHostileToPlayers)
				.def("IsFriendlyTo", &Unit::IsFriendlyTo)
				.def("IsNeutralToAll", &Unit::IsNeutralToAll)
				.def("IsContestedGuard", &Unit::IsContestedGuard)
				.def("IsPvP", &Unit::IsPvP)
				.def("SetPvP", &Unit::SetPvP)
				.def("GetCreatureType", &Unit::GetCreatureType)
				.def("GetCreatureTypeMask", &Unit::GetCreatureTypeMask)
				.def("GetCreatureType", &Unit::GetCreatureType)
				.def("getStandState", &Unit::getStandState)
				.def("IsSitState", &Unit::IsSitState)
				.def("IsStandState", &Unit::IsStandState)
				.def("SetStandState", &Unit::SetStandState)
				.def("IsMounted", &Unit::IsMounted)
				.def("GetMountID", &Unit::GetMountID)
				.def("Mount", &Unit::Mount)
				.def("Unmount", &Unit::Unmount)
				.def("GetMaxSkillValueForLevel", &Unit::GetMaxSkillValueForLevel)
				.def("DealDamageMods", &Unit::DealDamageMods)
				.def("DealDamage", &Unit::DealDamage)
				.def("DealHeal", &Unit::DealHeal)
				.def("PetOwnerKilledUnit", &Unit::PetOwnerKilledUnit)
				.def("ProcDamageAndSpell", &Unit::ProcDamageAndSpell)
				.def("ProcDamageAndSpellFor", &Unit::ProcDamageAndSpellFor)
				.def("HandleEmote", &Unit::HandleEmote)
				.def("HandleEmoteCommand", &Unit::HandleEmoteCommand)
				.def("HandleEmoteState", &Unit::HandleEmoteState)
				.def("AttackerStateUpdate", &Unit::AttackerStateUpdate)
				.def("MeleeMissChanceCalc", &Unit::MeleeMissChanceCalc)
				.def("CalculateMeleeDamage", &Unit::CalculateMeleeDamage)
				.def("DealMeleeDamage", &Unit::DealMeleeDamage)
				.def("CalculateSpellDamage", static_cast<void(Unit::*)(SpellNonMeleeDamage*, int32, SpellEntry const*, WeaponAttackType)>(&Creature::CalculateSpellDamage))
				.def("DealSpellDamage", &Unit::DealSpellDamage)
				.def("MeleeSpellMissChance", &Unit::MeleeSpellMissChance)
				.def("MeleeSpellHitResult", &Unit::MeleeSpellHitResult)
				.def("MagicSpellHitResult", &Unit::MagicSpellHitResult)
				.def("SpellHitResult", &Unit::SpellHitResult)
				.def("GetUnitDodgeChance", &Unit::GetUnitDodgeChance)
				.def("GetUnitParryChance", &Unit::GetUnitParryChance)
				.def("GetUnitBlockChance", &Unit::GetUnitBlockChance)
				.def("GetUnitCriticalChance", &Unit::GetUnitCriticalChance)
				.def("GetShieldBlockValue", &Unit::GetShieldBlockValue)
				.def("GetUnitMeleeSkill", &Unit::GetUnitMeleeSkill)
				.def("GetDefenseSkillValue", &Unit::GetDefenseSkillValue)
				.def("GetWeaponSkillValue", &Unit::GetWeaponSkillValue)
				.def("GetWeaponProcChance", &Unit::GetWeaponProcChance)
				.def("GetPPMProcChance", &Unit::GetPPMProcChance)
				.def("RollMeleeOutcomeAgainst", static_cast<MeleeHitOutcome(Unit::*)(const Unit*, WeaponAttackType) const>(&Unit::RollMeleeOutcomeAgainst))
				.def("RollMeleeOutcomeAgainst", static_cast<MeleeHitOutcome(Unit::*)(const Unit*, WeaponAttackType, int32, int32, int32, int32, int32, bool) const>(&Unit::RollMeleeOutcomeAgainst))
				.def("isVendor", &Unit::isVendor)
				.def("isTrainer", &Unit::isTrainer)
				.def("isQuestGiver", &Unit::isQuestGiver)
				.def("isGossip", &Unit::isGossip)
				.def("isTaxi", &Unit::isTaxi)
				.def("isGuildMaster", &Unit::isGuildMaster)
				.def("isBattleMaster", &Unit::isBattleMaster)
				.def("isBanker", &Unit::isBanker)
				.def("isInnkeeper", &Unit::isInnkeeper)
				.def("isSpiritHealer", &Unit::isSpiritHealer)
				.def("isSpiritGuide", &Unit::isSpiritGuide)
				.def("isTabardDesigner", &Unit::isTabardDesigner)
				.def("isAuctioner", &Unit::isAuctioner)
				.def("isArmorer", &Unit::isArmorer)
				.def("isServiceProvider", &Unit::isServiceProvider)
				.def("isSpiritService", &Unit::isSpiritService)
				.def("IsTaxiFlying", &Unit::IsTaxiFlying)
				.def("isInCombat", &Unit::isInCombat)
				.def("SetInCombatState", &Unit::SetInCombatState)
				.def("SetInCombatWith", &Unit::SetInCombatWith)
				.def("ClearInCombat", &Unit::ClearInCombat)
				.def("GetCombatTimer", &Unit::GetCombatTimer)
				.def("SetCombatTimer", &Unit::SetCombatTimer)
				.def("GetSpellAuraHolderBounds", static_cast<Unit::SpellAuraHolderBounds(Unit::*)(uint32)>(&Unit::GetSpellAuraHolderBounds))
				.def("HasAuraType", &Unit::HasAuraType)
				.def("HasAffectedAura", &Unit::HasAffectedAura)
				.def("HasAura", static_cast<bool(Unit::*)(uint32, SpellEffectIndex) const>(&Unit::HasAura))
				.def("HasAura", static_cast<bool(Unit::*)(uint32) const>(&Unit::HasAura))
				.def("HasSpell", &Unit::HasSpell)
				.def("HasStealthAura", &Unit::HasStealthAura)
				.def("HasInvisibilityAura", &Unit::HasInvisibilityAura)
				.def("isFeared", &Unit::isFeared)
				.def("isInRoots", &Unit::isInRoots)
				.def("IsPolymorphed", &Unit::IsPolymorphed)
				.def("isFrozen", &Unit::isFrozen)
				.def("RemoveSpellbyDamageTaken", &Unit::RemoveSpellbyDamageTaken)
				.def("isTargetableForAttack", &Unit::isTargetableForAttack)
				.def("isPassiveToHostile", &Unit::isPassiveToHostile)
				.def("IsInWater", &Unit::IsInWater)
				.def("IsUnderWater", &Unit::IsUnderWater)
				.def("isInAccessablePlaceFor", &Unit::isInAccessablePlaceFor)
				.def("SendHealSpellLog", &Unit::SendHealSpellLog)
				.def("SendFlyingAnimation", &Unit::SendFlyingAnimation)
				.def("SendEnergizeSpellLog", &Unit::SendEnergizeSpellLog)
				.def("EnergizeBySpell", &Unit::EnergizeBySpell)
				.def("SpellNonMeleeDamageLog", &Unit::SpellNonMeleeDamageLog)
				.def("CastSpell", static_cast<void(Unit::*)(Unit*, uint32, bool, Item *, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastSpell))
				.def("CastSpell", static_cast<void(Unit::*)(Unit*, SpellEntry const *, bool, Item*, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastSpell))
				.def("CastCustomSpell", static_cast<void(Unit::*)(Unit*, uint32, int32 const*, int32 const*, int32 const*, bool, Item *, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastCustomSpell))
				.def("CastCustomSpell", static_cast<void(Unit::*)(Unit*, SpellEntry const *, int32 const*, int32 const*, int32 const*, bool, Item *, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastCustomSpell))
				.def("CastSpell", static_cast<void(Unit::*)(float, float, float, uint32, bool, Item *, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastSpell))
				.def("CastSpell", static_cast<void(Unit::*)(float, float, float, SpellEntry const *, bool, Item *, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastSpell))
				.def("CanCast", &Unit::CanCast)
				.def("DeMorph", &Unit::DeMorph)
				.def("SendAttackStateUpdate", static_cast<void(Unit::*)(CalcDamageInfo*)>(&Unit::SendAttackStateUpdate))
				.def("SendAttackStateUpdate", static_cast<void(Unit::*)(uint32, Unit*, uint8, SpellSchoolMask, uint32, uint32, uint32, VictimState, uint32)>(&Unit::SendAttackStateUpdate))
				.def("SendSpellNonMeleeDamageLog", static_cast<void(Unit::*)(SpellNonMeleeDamage*)>(&Unit::SendSpellNonMeleeDamageLog))
				.def("SendSpellNonMeleeDamageLog", static_cast<void(Unit::*)(Unit*, uint32, uint32, SpellSchoolMask, uint32, uint32, bool, uint32, bool CriticalHit)>(&Unit::SendSpellNonMeleeDamageLog))
				.def("SendPeriodicAuraLog", &Unit::SendPeriodicAuraLog)
				.def("SendSpellMiss", &Unit::SendSpellMiss)
				.def("NearTeleportTo", &Unit::NearTeleportTo)
				.def("MonsterMoveWithSpeed", &Unit::MonsterMoveWithSpeed)
				.def("SendHeartBeat", &Unit::SendHeartBeat)
				.def("IsLevitating", &Unit::IsLevitating)
				.def("IsWalking", &Unit::IsWalking)
				.def("IsRooted", &Unit::IsRooted)
				.def("SetRoot", &Unit::SetRoot)
				.def("SetWaterWalk", &Unit::SetWaterWalk)
				.def("SetInFront", &Unit::SetInFront)
				.def("SetFacingTo", &Unit::SetFacingTo)
				.def("SetFacingToObject", &Unit::SetFacingToObject)
				.def("isAlive", &Unit::isAlive)
				.def("isDead", &Unit::isDead)
				.def("getDeathState", &Unit::getDeathState)
				.def("SetDeathState", &Unit::SetDeathState)
				.def("GetOwnerGuid", &Unit::GetOwnerGuid)
				.def("SetOwnerGuid", &Unit::SetOwnerGuid)
				.def("GetCreatorGuid", &Unit::GetCreatorGuid)
				.def("SetCreatorGuid", &Unit::SetCreatorGuid)
				.def("GetPetGuid", &Unit::GetPetGuid)
				.def("SetPetGuid", &Unit::SetPetGuid)
				.def("GetCharmerGuid", &Unit::GetCharmerGuid)
				.def("SetCharmerGuid", &Unit::SetCharmerGuid)
				.def("GetCharmGuid", &Unit::GetCharmGuid)
				.def("SetCharmGuid", &Unit::SetCharmGuid)
				.def("GetTargetGuid", &Unit::GetTargetGuid)
				.def("SetTargetGuid", &Unit::SetTargetGuid)
				.def("GetChannelObjectGuid", &Unit::GetChannelObjectGuid)
				.def("SetChannelObjectGuid", &Unit::SetChannelObjectGuid)
				.def("GetMiniPet", &Unit::GetMiniPet)
				.def("GetCharmerOrOwnerGuid", &Unit::GetCharmerOrOwnerGuid)
				.def("GetCharmerOrOwnerOrOwnGuid", &Unit::GetCharmerOrOwnerOrOwnGuid)
				.def("isCharmedOwnedByPlayerOrPlayer", &Unit::isCharmedOwnedByPlayerOrPlayer)
				.def("GetSpellModOwner", &Unit::GetSpellModOwner)
				.def("GetOwner", &Unit::GetOwner)
				.def("GetPet", &Unit::GetPet)
				.def("GetCharmer", &Unit::GetCharmer)
				.def("GetCharm", &Unit::GetCharm)
				.def("Uncharm", &Unit::Uncharm)
				.def("GetCharmerOrOwner", &Unit::GetCharmerOrOwner)
				.def("GetCharmerOrOwnerOrSelf", &Unit::GetCharmerOrOwnerOrSelf)
				.def("IsCharmerOrOwnerPlayerOrPlayerItself", &Unit::IsCharmerOrOwnerPlayerOrPlayerItself)
				.def("GetCharmerOrOwnerPlayerOrPlayerItself", static_cast<Player*(Unit::*)()>(&Unit::GetCharmerOrOwnerPlayerOrPlayerItself))
				.def("GetCharmerOrOwnerPlayerOrPlayerItself", static_cast<const Player*(Unit::*)() const>(&Unit::GetCharmerOrOwnerPlayerOrPlayerItself))
				.def("GetCombatDistance", static_cast<float(Unit::*)(const Unit*) const>(&Unit::GetCombatDistance))
				.def("SetPet", &Unit::SetPet)
				.def("SetCharm", &Unit::SetCharm)
				.def("AddGuardian", &Unit::AddGuardian)
				.def("RemoveGuardian", &Unit::RemoveGuardian)
				.def("RemoveGuardians", &Unit::RemoveGuardians)
				.def("FindGuardianWithEntry", &Unit::FindGuardianWithEntry)
				.def("isCharmed", &Unit::isCharmed)
				.def("GetCharmInfo", &Unit::GetCharmInfo)
				.def("InitCharmInfo", &Unit::InitCharmInfo)
				.def("GetTotemGuid", &Unit::GetTotemGuid)
				.def("GetTotem", &Unit::GetTotem)
				.def("IsAllTotemSlotsUsed", &Unit::IsAllTotemSlotsUsed)
				.def("_AddTotem", &Unit::_AddTotem)
				.def("_RemoveTotem", &Unit::_RemoveTotem)
				.def("AddSpellAuraHolder", &Unit::AddSpellAuraHolder)
				.def("AddAuraToModList", &Unit::AddAuraToModList)
				.def("CanStackAura", &Unit::CanStackAura)
				.def("IsMorePowerfulSpellActive", &Unit::IsMorePowerfulSpellActive)
				.def("RemoveAura", static_cast<void(Unit::*)(Aura*, AuraRemoveMode)>(&Unit::RemoveAura))
				.def("RemoveAura", static_cast<void(Unit::*)(uint32, SpellEffectIndex, Aura*)>(&Unit::RemoveAura))
				.def("RemoveSpellAuraHolder", &Unit::RemoveSpellAuraHolder)
				.def("RemoveSingleAuraFromSpellAuraHolder", static_cast<void(Unit::*)(SpellAuraHolder *, SpellEffectIndex, AuraRemoveMode)>(&Unit::RemoveSingleAuraFromSpellAuraHolder))
				.def("RemoveSingleAuraFromSpellAuraHolder", static_cast<void(Unit::*)(uint32, SpellEffectIndex, ObjectGuid, AuraRemoveMode)>(&Unit::RemoveSingleAuraFromSpellAuraHolder))
				.def("RemoveAurasDueToSpell", &Unit::RemoveAurasDueToSpell)
				.def("RemoveAurasDueToItemSpell", &Unit::RemoveAurasDueToItemSpell)
				.def("RemoveAurasByCasterSpell", &Unit::RemoveAurasByCasterSpell)
				.def("RemoveAurasDueToSpellBySteal", &Unit::RemoveAurasDueToSpellBySteal)
				.def("RemoveAurasDueToSpellByCancel", &Unit::RemoveAurasDueToSpellByCancel)
				.def("RemoveNotOwnSingleTargetAuras", &Unit::RemoveNotOwnSingleTargetAuras)
				.def("RemoveAurasAtMechanicImmunity", &Unit::RemoveAurasAtMechanicImmunity)
				.def("RemoveSpellsCausingAura", static_cast<void(Unit::*)(AuraType)>(&Unit::RemoveSpellsCausingAura))
				.def("RemoveSpellsCausingAura", static_cast<void(Unit::*)(AuraType, SpellAuraHolder*)>(&Unit::RemoveSpellsCausingAura))
				.def("RemoveRankAurasDueToSpell", &Unit::RemoveRankAurasDueToSpell)
				.def("RemoveNoStackAurasDueToAuraHolder", &Unit::RemoveNoStackAurasDueToAuraHolder)
				.def("RemoveAurasWithInterruptFlags", &Unit::RemoveAurasWithInterruptFlags)
				.def("RemoveAurasWithAttribute", &Unit::RemoveAurasWithAttribute)
				.def("RemoveAurasWithDispelType", &Unit::RemoveAurasWithDispelType)
				.def("RemoveAllAuras", &Unit::RemoveAllAuras)
				.def("RemoveAllAurasOnDeath", &Unit::RemoveAllAurasOnDeath)
				.def("RemoveAllAurasOnEvade", &Unit::RemoveAllAurasOnEvade)
				.def("RemoveAuraHolderFromStack", &Unit::RemoveAuraHolderFromStack)
				.def("RemoveAuraHolderDueToSpellByDispel", &Unit::RemoveAuraHolderDueToSpellByDispel)
				.def("DelaySpellAuraHolder", &Unit::DelaySpellAuraHolder)
				.def("SetCreateStat", &Unit::SetCreateStat)
				.def("SetCreateHealth", &Unit::SetCreateHealth)
				.def("GetCreateHealth", &Unit::GetCreateHealth)
				.def("SetCreateMana", &Unit::SetCreateMana)
				.def("GetCreateMana", &Unit::GetCreateMana)
				.def("GetCreatePowers", &Unit::GetCreatePowers)
				.def("GetCreateStat", &Unit::GetCreateStat)
				.def("SetCurrentCastedSpell", &Unit::SetCurrentCastedSpell)
				.def("ProhibitSpellSchool", &Unit::ProhibitSpellSchool)
				.def("InterruptSpell", &Unit::InterruptSpell)
				.def("FinishSpell", &Unit::FinishSpell)
				.def("IsNonMeleeSpellCasted", &Unit::IsNonMeleeSpellCasted)
				.def("InterruptNonMeleeSpells", &Unit::InterruptNonMeleeSpells)
				.def("GetCurrentSpell", &Unit::GetCurrentSpell)
				.def("FindCurrentSpellBySpellId", &Unit::FindCurrentSpellBySpellId)
				.def("CheckAndIncreaseCastCounter", &Unit::CheckAndIncreaseCastCounter)
				.def("DecreaseCastCounter", &Unit::DecreaseCastCounter)
				.def("GetShapeshiftForm", &Unit::GetShapeshiftForm)
				.def("SetShapeshiftForm", &Unit::SetShapeshiftForm)
				.def("IsInFeralForm", &Unit::IsInFeralForm)
				.def("IsInDisallowedMountForm", &Unit::IsInDisallowedMountForm)
				.def("HandleStatModifier", &Unit::HandleStatModifier)
				.def("SetModifierValue", &Unit::SetModifierValue)
				.def("GetModifierValue", &Unit::GetModifierValue)
				.def("GetTotalStatValue", &Unit::GetTotalStatValue)
				.def("GetTotalAuraModValue", &Unit::GetTotalAuraModValue)
				.def("GetSpellSchoolByAuraGroup", &Unit::GetSpellSchoolByAuraGroup)
				.def("GetStatByAuraGroup", &Unit::GetStatByAuraGroup)
				.def("GetPowerTypeByAuraGroup", &Unit::GetPowerTypeByAuraGroup)
				.def("CanModifyStats", &Unit::CanModifyStats)
				.def("SetCanModifyStats", &Unit::SetCanModifyStats)
				.def("UpdateStats", &Unit::UpdateStats)
				.def("UpdateAllStats", &Unit::UpdateAllStats)
				.def("UpdateResistances", &Unit::UpdateResistances)
				.def("UpdateArmor", &Unit::UpdateArmor)
				.def("UpdateMaxHealth", &Unit::UpdateMaxHealth)
				.def("UpdateMaxPower", &Unit::UpdateMaxPower)
				.def("UpdateAttackPowerAndDamage", &Unit::UpdateAttackPowerAndDamage)
				.def("UpdateDamagePhysical", &Unit::UpdateDamagePhysical)
				.def("GetTotalAttackPowerValue", &Unit::GetTotalAttackPowerValue)
				.def("GetWeaponDamageRange", &Unit::GetWeaponDamageRange)
				.def("SetBaseWeaponDamage", &Unit::SetBaseWeaponDamage)
				.def("GetVisibility", &Unit::GetVisibility)
				.def("SetVisibility", &Unit::SetVisibility)
				.def("UpdateVisibilityAndView", &Unit::UpdateVisibilityAndView)
				.def("isVisibleForOrDetect", &Unit::isVisibleForOrDetect)
				.def("canDetectInvisibilityOf", &Unit::canDetectInvisibilityOf)
				.def("isVisibleForInState", &Unit::isVisibleForInState)
				.def("IsVisibleInGridForPlayer", &Unit::IsVisibleInGridForPlayer)
				.def("isInvisibleForAlive", &Unit::isInvisibleForAlive)
				.def("GetSingleCastSpellTargets", static_cast<Unit::SingleCastSpellTargetMap&(Unit::*)()>(&Unit::GetSingleCastSpellTargets))
				.def("GetSingleCastSpellTargets", static_cast<const Unit::SingleCastSpellTargetMap&(Unit::*)() const>(&Unit::GetSingleCastSpellTargets))
				.def("RemoveSpellsCausingAura", static_cast<void(Unit::*)(AuraType)>(&Unit::RemoveSpellsCausingAura))
				.def("CanHaveThreatList", &Unit::CanHaveThreatList)
				.def("AddThreat", &Unit::AddThreat)
				.def("ApplyTotalThreatModifier", &Unit::ApplyTotalThreatModifier)
				.def("DeleteThreatList", &Unit::DeleteThreatList)
				.def("IsSecondChoiceTarget", &Unit::IsSecondChoiceTarget)
				.def("SelectHostileTarget", &Unit::SelectHostileTarget)
				.def("TauntApply", &Unit::TauntApply)
				.def("TauntFadeOut", &Unit::TauntFadeOut)
				.def("FixateTarget", &Unit::FixateTarget)
				.def("getThreatManager", static_cast<ThreatManager&(Unit::*)()>(&Unit::getThreatManager))
				.def("getThreatManager", static_cast<const ThreatManager&(Unit::*)() const>(&Unit::getThreatManager))
				.def("addHatedBy", &Unit::addHatedBy)
				.def("removeHatedBy", &Unit::removeHatedBy)
				.def("getHostileRefManager", &Unit::getHostileRefManager)
				.def("GetAura", static_cast<Aura*(Unit::*)(uint32, SpellEffectIndex)>(&Unit::GetAura))
				.def("GetAura", static_cast<Aura*(Unit::*)(AuraType, SpellFamily, uint64, ObjectGuid)>(&Unit::GetAura))
				.def("GetSpellAuraHolder", static_cast<SpellAuraHolder*(Unit::*)(uint32) const>(&Unit::GetSpellAuraHolder))
				.def("GetSpellAuraHolder", static_cast<SpellAuraHolder*(Unit::*)(uint32, ObjectGuid) const>(&Unit::GetSpellAuraHolder))
				.def("GetSpellAuraHolderMap", static_cast<Unit::SpellAuraHolderMap&(Unit::*)()>(&Unit::GetSpellAuraHolderMap))
				.def("GetSpellAuraHolderMap", static_cast<const Unit::SpellAuraHolderMap&(Unit::*)() const>(&Unit::GetSpellAuraHolderMap))
				.def("GetAurasByType", &Unit::GetAurasByType)
				.def("ApplyAuraProcTriggerDamage", &Unit::ApplyAuraProcTriggerDamage)
				.def("GetTotalAuraModifier", &Unit::GetTotalAuraModifier)
				.def("GetTotalAuraMultiplier", &Unit::GetTotalAuraMultiplier)
				.def("GetMaxPositiveAuraModifier", &Unit::GetMaxPositiveAuraModifier)
				.def("GetMaxNegativeAuraModifier", &Unit::GetMaxNegativeAuraModifier)
				.def("GetTotalAuraModifierByMiscMask", &Unit::GetTotalAuraModifierByMiscMask)
				.def("GetTotalAuraMultiplierByMiscMask", &Unit::GetTotalAuraMultiplierByMiscMask)
				.def("GetMaxPositiveAuraModifierByMiscMask", &Unit::GetMaxPositiveAuraModifierByMiscMask)
				.def("GetMaxNegativeAuraModifierByMiscMask", &Unit::GetMaxNegativeAuraModifierByMiscMask)
				.def("GetTotalAuraModifierByMiscValue", &Unit::GetTotalAuraModifierByMiscValue)
				.def("GetTotalAuraMultiplierByMiscValue", &Unit::GetTotalAuraMultiplierByMiscValue)
				.def("GetMaxPositiveAuraModifierByMiscValue", &Unit::GetMaxPositiveAuraModifierByMiscValue)
				.def("GetMaxNegativeAuraModifierByMiscValue", &Unit::GetMaxNegativeAuraModifierByMiscValue)
				.def("GetDummyAura", &Unit::GetDummyAura)
				.def("GetDisplayId", &Unit::GetDisplayId)
				.def("SetDisplayId", &Unit::SetDisplayId)
				.def("GetNativeDisplayId", &Unit::GetNativeDisplayId)
				.def("SetNativeDisplayId", &Unit::SetNativeDisplayId)
				.def("setTransForm", &Unit::setTransForm)
				.def("getTransForm", &Unit::getTransForm)
				.def("UpdateModelData", &Unit::UpdateModelData)
				.def("GetDynObject", static_cast<DynamicObject*(Unit::*)(uint32, SpellEffectIndex)>(&Unit::GetDynObject))
				.def("GetDynObject", static_cast<DynamicObject*(Unit::*)(uint32)>(&Unit::GetDynObject))
				.def("AddDynObject", &Unit::AddDynObject)
				.def("RemoveDynObject", &Unit::RemoveDynObject)
				.def("RemoveDynObjectWithGUID", &Unit::RemoveDynObjectWithGUID)
				.def("RemoveAllDynObjects", &Unit::RemoveAllDynObjects)
				.def("GetGameObject", &Unit::GetGameObject)
				.def("AddGameObject", &Unit::AddGameObject)
				.def("RemoveGameObject", static_cast<void(Unit::*)(GameObject*, bool)>(&Unit::RemoveGameObject))
				.def("RemoveGameObject", static_cast<void(Unit::*)(uint32, bool)>(&Unit::RemoveGameObject))
				.def("RemoveAllGameObjects", &Unit::RemoveAllGameObjects)
				.def("CalculateDamage", &Unit::CalculateDamage)
				.def("GetAPMultiplier", &Unit::GetAPMultiplier)
				.def("ModifyAuraState", &Unit::ModifyAuraState)
				.def("HasAuraState", &Unit::HasAuraState)
				.def("UnsummonAllTotems", &Unit::UnsummonAllTotems)
				.def("UnsummonIfTotem", &Unit::UnsummonIfTotem)
				.def("SelectMagnetTarget", &Unit::SelectMagnetTarget)
				.def("SpellBonusWithCoeffs", &Unit::SpellBonusWithCoeffs)
				.def("SpellBaseDamageBonusDone", &Unit::SpellBaseDamageBonusDone)
				.def("SpellBaseDamageBonusTaken", &Unit::SpellBaseDamageBonusTaken)
				.def("SpellDamageBonusDone", &Unit::SpellDamageBonusDone)
				.def("SpellDamageBonusTaken", &Unit::SpellDamageBonusTaken)
				.def("SpellBaseHealingBonusDone", &Unit::SpellBaseHealingBonusDone)
				.def("SpellBaseHealingBonusTaken", &Unit::SpellBaseHealingBonusTaken)
				.def("SpellHealingBonusDone", &Unit::SpellHealingBonusDone)
				.def("SpellHealingBonusTaken", &Unit::SpellHealingBonusTaken)
				.def("MeleeDamageBonusDone", &Unit::MeleeDamageBonusDone)
				.def("MeleeDamageBonusTaken", &Unit::MeleeDamageBonusTaken)
				.def("IsSpellBlocked", &Unit::IsSpellBlocked)
				.def("IsSpellCrit", &Unit::IsSpellCrit)
				.def("SpellCriticalDamageBonus", &Unit::SpellCriticalDamageBonus)
				.def("SpellCriticalHealingBonus", &Unit::SpellCriticalHealingBonus)
				.def("IsTriggeredAtSpellProcEvent", &Unit::IsTriggeredAtSpellProcEvent)
				.def("HandleDummyAuraProc", &Unit::HandleDummyAuraProc)
				.def("HandleHasteAuraProc", &Unit::HandleHasteAuraProc)
				.def("HandleProcTriggerSpellAuraProc", &Unit::HandleProcTriggerSpellAuraProc)
				.def("HandleProcTriggerDamageAuraProc", &Unit::HandleProcTriggerDamageAuraProc)
				.def("HandleOverrideClassScriptAuraProc", &Unit::HandleOverrideClassScriptAuraProc)
				.def("HandleModCastingSpeedNotStackAuraProc", &Unit::HandleModCastingSpeedNotStackAuraProc)
				.def("HandleReflectSpellsSchoolAuraProc", &Unit::HandleReflectSpellsSchoolAuraProc)
				.def("HandleModPowerCostSchoolAuraProc", &Unit::HandleModPowerCostSchoolAuraProc)
				.def("HandleMechanicImmuneResistanceAuraProc", &Unit::HandleMechanicImmuneResistanceAuraProc)
				.def("HandleModResistanceAuraProc", &Unit::HandleModResistanceAuraProc)
				.def("HandleNULLProc", &Unit::HandleNULLProc)
				.def("HandleCantTrigger", &Unit::HandleCantTrigger)
				.def("SetLastManaUse", &Unit::SetLastManaUse)
				.def("IsUnderLastManaUseEffect", &Unit::IsUnderLastManaUseEffect)
				.def("SetContestedPvP", &Unit::SetContestedPvP)
				.def("ApplySpellImmune", &Unit::ApplySpellImmune)
				.def("ApplySpellDispelImmunity", &Unit::ApplySpellDispelImmunity)
				.def("IsImmuneToSpell", static_cast<bool(Unit::*)(uint32)>(&Unit::IsImmuneToSpell))
				.def("IsImmunedToDamage", &Unit::IsImmunedToDamage)
				.def("IsImmuneToSpellEffect", &Unit::IsImmuneToSpellEffect)
				.def("getAttackEnabled", &Unit::getAttackEnabled)
				.def("setAttackEnabled", &Unit::setAttackEnabled)
				.def("CalcArmorReducedDamage", &Unit::CalcArmorReducedDamage)
				.def("RollBinarySpellEffectResist", &Unit::RollBinarySpellEffectResist)
				.def("RollSpellEffectResist", &Unit::RollSpellEffectResist)
				.def("CalculateDamageAbsorbAndResist", &Unit::CalculateDamageAbsorbAndResist)
				.def("CalculateAbsorbResistBlock", &Unit::CalculateAbsorbResistBlock)
				.def("UpdateSpeed", &Unit::UpdateSpeed)
				.def("GetSpeed", &Unit::GetSpeed)
				.def("GetSpeedRate", &Unit::GetSpeedRate)
				.def("SetSpeedRate", &Unit::SetSpeedRate)
				.def("isHover", &Unit::isHover)
				.def("_RemoveAllAuraMods", &Unit::_RemoveAllAuraMods)
				.def("_ApplyAllAuraMods", &Unit::_ApplyAllAuraMods)
				.def("CalculateSpellDamage", static_cast<int32(Unit::*)(Unit const*, SpellEntry const*, SpellEffectIndex, int32 const*)>(&Creature::CalculateSpellDamage))
				.def("CalculateLevelPenalty", &Unit::CalculateLevelPenalty)
				.def("addFollower", &Unit::addFollower)
				.def("removeFollower", &Unit::removeFollower)
				.def("GetMotionMaster", &Unit::GetMotionMaster)
				.def("IsStopped", &Unit::IsStopped)
				.def("StopMoving", &Unit::StopMoving)
				.def("SetFeared", &Unit::SetFeared)
				.def("SetConfused", &Unit::SetConfused)
				.def("SetFeignDeath", &Unit::SetFeignDeath)
				.def("AddComboPointHolder", &Unit::AddComboPointHolder)
				.def("RemoveComboPointHolder", &Unit::RemoveComboPointHolder)
				.def("ClearComboPointHolders", &Unit::ClearComboPointHolders)
				.def("SendPetCastFail", &Unit::SendPetCastFail)
				.def("SendPetActionFeedback", &Unit::SendPetActionFeedback)
				.def("SendPetTalk", &Unit::SendPetTalk)
				.def("SendPetAIReaction", &Unit::SendPetAIReaction)
				.def("propagateSpeedChange", &Unit::propagateSpeedChange)
				.def("ClearAllReactives", &Unit::ClearAllReactives)
				.def("StartReactiveTimer", &Unit::StartReactiveTimer)
				.def("UpdateReactives", &Unit::UpdateReactives)
				.def("UpdateAuraForGroup", &Unit::UpdateAuraForGroup)
				.def("AddPetAura", &Unit::AddPetAura)
				.def("RemovePetAura", &Unit::RemovePetAura)
				.def("GetDamageForAuraType", &Unit::GetDamageForAuraType)
				.def("SetDamageForAuraType", &Unit::SetDamageForAuraType)
				.def("ScheduleAINotify", &Unit::ScheduleAINotify)
				.def("IsAINotifyScheduled", &Unit::IsAINotifyScheduled)
				.def("_SetAINotifyScheduled", &Unit::_SetAINotifyScheduled)
				.def("OnRelocated", &Unit::OnRelocated)
				.def("IsLinkingEventTrigger", &Unit::IsLinkingEventTrigger)
				.def("SetCanChase", &Unit::SetCanChase)
				.def("GetCanChase", &Unit::GetCanChase)
				.def("CanAttackPlayer", &Unit::CanAttackPlayer)
				.def("SetCanAttackPlayer", &Unit::SetCanAttackPlayer)

				//Creature Functions
			];
		}
	};
}