#include "../../pchdef.h"
#include "../LuaInclude.h"
#include <luabind/luabind.hpp>

#include "PlayerWrapper.h"
#include "UnitWrapper.h"
#include "../../Creature.h"
#include "../../SpellAuras.h"
#include "../../CreatureAI.h"
#include "../../CreatureGroups.h"
#include "../../DynamicObject.h"
#include "../../InstanceData.h"
#include "../../Spell.h"
#include "../../Totem.h"
#include "../../ZoneScript.h"
#include "../../ReputationMgr.h"



namespace Lua
{
	namespace PlayerWrapper
	{
		void Wrap(lua_State* L)
		{
			using namespace luabind;

			open(L);

			module(L)
			[
				class_<ObjectGuid>("ObjectGuid").
				def(constructor<>()),

				class_<Object>("Object")
				.def("IsInWorld", &Object::IsInWorld)
				.def("AddToWorld", &Object::AddToWorld)
				.def("RemoveFromWorld", &Object::RemoveFromWorld)
				.def("ClearUpdateMask", &Object::ClearUpdateMask)
				.def("GetObjectGuid", &Object::GetObjectGuid)
				.def("GetGUID", &Object::GetGUID)
				.def("GetGUIDLow", &Object::GetGUIDLow)
				.def("GetPackGUID", &Object::GetPackGUID)
				.def("GetGuidStr", &Object::GetGuidStr)
				.def("GetEntry", &Object::GetEntry)
				.def("SetEntry", &Object::SetEntry)
				.def("GetObjectScale", &Object::GetObjectScale)
				.def("SetObjectScale", &Object::SetObjectScale)
				.def("GetTypeId", &Object::GetTypeId)
				.def("isType", &Object::isType)
				.def("BuildCreateUpdateBlockForPlayer", &Object::BuildCreateUpdateBlockForPlayer)
				.def("SendCreateUpdateToPlayer", &Object::SendCreateUpdateToPlayer)
				.def("AddToClientUpdateList", &Object::AddToClientUpdateList)
				.def("RemoveFromClientUpdateList", &Object::RemoveFromClientUpdateList)
				.def("BuildUpdateData", &Object::BuildUpdateData)
				.def("MarkForClientUpdate", &Object::MarkForClientUpdate)
				.def("SendForcedObjectUpdate", &Object::SendForcedObjectUpdate)
				.def("BuildValuesUpdateBlockForPlayer", &Object::BuildValuesUpdateBlockForPlayer)
				.def("BuildOutOfRangeUpdateBlock", &Object::BuildOutOfRangeUpdateBlock)
				.def("BuildMovementUpdateBlock", &Object::BuildMovementUpdateBlock)
				.def("DestroyForPlayer", &Object::DestroyForPlayer)
				.def("GetInt32Value", &Object::GetInt32Value)
				.def("GetUInt32Value", &Object::GetUInt32Value)
				.def("GetUInt64Value", &Object::GetUInt64Value)
				.def("GetFloatValue", &Object::GetFloatValue)
				.def("SetBoundingValue", &Object::SetBoundingValue)
				.def("GetByteValue", &Object::GetByteValue)
				.def("GetUInt16Value", &Object::GetUInt16Value)
				.def("GetGuidValue", &Object::GetGuidValue)
				.def("SetInt32Value", &Object::SetInt32Value)
				.def("SetUInt32Value", &Object::SetUInt32Value)
				.def("SetUInt64Value", &Object::SetUInt64Value)
				.def("SetFloatValue", &Object::SetFloatValue)
				.def("SetByteValue", &Object::SetByteValue)
				.def("SetUInt16Value", &Object::SetUInt16Value)
				.def("SetInt16Value", &Object::SetInt16Value)
				.def("SetGuidValue", &Object::SetGuidValue)
				.def("SetStatFloatValue", &Object::SetStatFloatValue)
				.def("SetStatInt32Value", &Object::SetStatInt32Value)
				.def("ApplyModUInt32Value", &Object::ApplyModUInt32Value)
				.def("ApplyModInt32Value", &Object::ApplyModInt32Value)
				//.def("ApplyModUInt64Value", &Player::ApplyModUInt64Value)
				.def("ApplyModPositiveFloatValue", &Object::ApplyModPositiveFloatValue)
				.def("ApplyModSignedFloatValue", &Object::ApplyModSignedFloatValue)
				.def("ApplyPercentModFloatValue", &Object::ApplyPercentModFloatValue)
				.def("SetFlag", &Object::SetFlag)
				.def("RemoveFlag", &Object::RemoveFlag)
				.def("ToggleFlag", &Object::ToggleFlag)
				.def("HasFlag", &Object::HasFlag)
				.def("ApplyModFlag", &Object::ApplyModFlag)
				.def("SetByteFlag", &Object::SetByteFlag)
				.def("RemoveByteFlag", &Object::RemoveByteFlag)
				.def("ToggleByteFlag", &Object::ToggleByteFlag)
				.def("HasByteFlag", &Object::HasByteFlag)
				.def("ApplyModByteFlag", &Object::ApplyModByteFlag)
				.def("SetShortFlag", &Object::SetShortFlag)
				.def("RemoveShortFlag", &Object::RemoveShortFlag)
				.def("ToggleShortFlag", &Object::ToggleShortFlag)
				.def("HasShortFlag", &Object::HasShortFlag)
				.def("ApplyModShortFlag", &Object::ApplyModShortFlag)
				.def("SetFlag64", &Object::SetFlag64)
				.def("RemoveFlag64", &Object::RemoveFlag64)
				.def("ToggleFlag64", &Object::ToggleFlag64)
				.def("HasFlag64", &Object::HasFlag64)
				.def("ApplyModFlag64", &Object::ApplyModFlag64)
				.def("LoadValues", &Object::LoadValues)
				.def("GetValuesCount", &Object::GetValuesCount)
				.def("InitValues", &Object::InitValues),

				class_<WorldObject, Object>("WorldObject")
				.def("Relocate", static_cast<void(WorldObject::*)(float, float, float, float)>(&WorldObject::Relocate))
				.def("Relocate", static_cast<void(WorldObject::*)(float, float, float)>(&WorldObject::Relocate))
				.def("SetOrientation", &WorldObject::SetOrientation)
				.def("GetPositionX", &WorldObject::GetPositionX)
				.def("GetPositionY", &WorldObject::GetPositionY)
				.def("GetPositionZ", &WorldObject::GetPositionZ)
				//.def("GetPosition", &WorldObject::GetPosition)
				//.def("GetPosition", &WorldObject::GetPosition)
				.def("GetOrientation", &WorldObject::GetOrientation)
				.def("GetNearPoint2D", &WorldObject::GetNearPoint2D)
				.def("GetNearPoint", &WorldObject::GetNearPoint)
				.def("GetClosePoint", &WorldObject::GetClosePoint)
				.def("GetNearPoint", &WorldObject::GetNearPoint)
				.def("GetContactPoint", &WorldObject::GetContactPoint)
				.def("GetNearPoint", &WorldObject::GetNearPoint)
				.def("GetObjectBoundingRadius", &WorldObject::GetObjectBoundingRadius)
				.def("IsPositionValid", &WorldObject::IsPositionValid)
				.def("UpdateGroundPositionZ", &WorldObject::UpdateGroundPositionZ)
				.def("UpdateAllowedPositionZ", &WorldObject::UpdateAllowedPositionZ)
				.def("GetRandomPoint", &WorldObject::GetRandomPoint)
				.def("GetMapId", &WorldObject::GetMapId)
				.def("GetInstanceId", &WorldObject::GetInstanceId)
				.def("GetZoneId", &WorldObject::GetZoneId)
				.def("GetAreaId", &WorldObject::GetAreaId)
				.def("GetZoneAndAreaId", &WorldObject::GetZoneAndAreaId)
				.def("GetInstanceData", &WorldObject::GetInstanceData)
				.def("GetName", &WorldObject::GetName)
				.def("SetName", &WorldObject::SetName)
				.def("GetNameForLocaleIdx", &WorldObject::GetNameForLocaleIdx)
				.def("GetDistance", static_cast<float(WorldObject::*)(const WorldObject*) const>(&WorldObject::GetDistance))
				.def("GetDistanceSqr", &WorldObject::GetDistanceSqr)
				.def("GetDistance", static_cast<float(WorldObject::*)(float, float, float) const>(&WorldObject::GetDistance))
				.def("GetDistance2d", static_cast<float(WorldObject::*)(const WorldObject*) const>(&WorldObject::GetDistance2d))
				.def("GetDistance2d", static_cast<float(WorldObject::*)(float, float) const>(&WorldObject::GetDistance2d))
				.def("GetDistanceZ", &WorldObject::GetDistanceZ)
				.def("IsInMap", &WorldObject::IsInMap)
				.def("IsWithinDist3d", &WorldObject::IsWithinDist3d)
				.def("IsWithinDist2d", &WorldObject::IsWithinDist2d)
				.def("_IsWithinDist", &WorldObject::_IsWithinDist)
				.def("IsWithinDist", &WorldObject::IsWithinDist)
				.def("_IsWithinDist", &WorldObject::_IsWithinDist)
				.def("IsWithinDistInMap", &WorldObject::IsWithinDistInMap)
				.def("IsInMap", &WorldObject::IsInMap)
				.def("IsWithinLOS", &WorldObject::IsWithinLOS)
				.def("IsWithinLOSInMap", &WorldObject::IsWithinLOSInMap)
				.def("GetDistanceOrder", &WorldObject::GetDistanceOrder)
				.def("IsInRange", &WorldObject::IsInRange)
				.def("IsInRange2d", &WorldObject::IsInRange2d)
				.def("IsInRange3d", &WorldObject::IsInRange3d)
				.def("GetAngle", static_cast<float(WorldObject::*)(float, float) const>(&WorldObject::GetAngle))
				.def("GetAngle", static_cast<float(WorldObject::*)(const WorldObject*) const>(&WorldObject::GetAngle))
				.def("HasInArc", static_cast<bool(WorldObject::*)(float, float, float) const>(&WorldObject::HasInArc))
				.def("HasInArc", static_cast<bool(WorldObject::*)(float, const WorldObject*) const>(&WorldObject::HasInArc))
				.def("isInFrontInMap", &WorldObject::isInFrontInMap)
				.def("isInBackInMap", &WorldObject::isInBackInMap)
				.def("isInFront", &WorldObject::isInFront)
				.def("isInBack", &WorldObject::isInBack)
				.def("CleanupsBeforeDelete", &WorldObject::CleanupsBeforeDelete)
				.def("SendMessageToSet", &WorldObject::SendMessageToSet)
				.def("SendMessageToSetInRange", static_cast<void(WorldObject::*)(WorldPacket*, float, bool)>(&WorldObject::SendMessageToSetInRange))
				.def("SendMessageToSetExcept", &WorldObject::SendMessageToSetExcept)
				.def("MonsterSay", static_cast<void(WorldObject::*)(const char*, uint32, Unit*)>(&WorldObject::MonsterSay))
				.def("MonsterYell", static_cast<void(WorldObject::*)(const char*, uint32, Unit*)>(&WorldObject::MonsterYell))
				.def("MonsterTextEmote", static_cast<void(WorldObject::*)(const char*, Unit*, bool)>(&WorldObject::MonsterTextEmote))
				.def("MonsterWhisper", static_cast<void(WorldObject::*)(const char*, Unit*, bool)>(&WorldObject::MonsterWhisper))
				.def("MonsterSay", static_cast<void(WorldObject::*)(int32, uint32, Unit*)>(&WorldObject::MonsterSay))
				.def("MonsterYell", static_cast<void(WorldObject::*)(int32, uint32, Unit*)>(&WorldObject::MonsterYell))
				.def("MonsterTextEmote", static_cast<void(WorldObject::*)(int32, Unit*, bool)>(&WorldObject::MonsterTextEmote))
				.def("MonsterWhisper", static_cast<void(WorldObject::*)(int32, Unit*, bool)>(&WorldObject::MonsterWhisper))
				.def("MonsterYellToZone", &WorldObject::MonsterYellToZone)
				.def("BuildMonsterChat", &WorldObject::BuildMonsterChat)
				.def("PlayDistanceSound", &WorldObject::PlayDistanceSound)
				.def("PlayDirectSound", &WorldObject::PlayDirectSound)
				.def("SendObjectDeSpawnAnim", &WorldObject::SendObjectDeSpawnAnim)
				.def("SendGameObjectCustomAnim", &WorldObject::SendGameObjectCustomAnim)
				.def("IsHostileTo", &WorldObject::IsHostileTo)
				.def("IsFriendlyTo", &WorldObject::IsFriendlyTo)
				.def("IsControlledByPlayer", &WorldObject::IsControlledByPlayer)
				.def("SaveRespawnTime", &WorldObject::SaveRespawnTime)
				.def("AddObjectToRemoveList", &WorldObject::AddObjectToRemoveList)
				.def("UpdateObjectVisibility", &WorldObject::UpdateObjectVisibility)
				.def("UpdateVisibilityAndView", &WorldObject::UpdateVisibilityAndView)
				.def("isVisibleFor", &WorldObject::isVisibleFor)
				.def("isVisibleForInState", &WorldObject::isVisibleForInState)
				.def("SetMap", &WorldObject::SetMap)
				.def("GetMap", &WorldObject::GetMap)
				.def("FindMap", &WorldObject::FindMap)
				.def("ResetMap", &WorldObject::ResetMap)
				.def("GetTerrain", &WorldObject::GetTerrain)
				.def("SetZoneScript", &WorldObject::SetZoneScript)
				.def("GetZoneScript", &WorldObject::GetZoneScript)
				.def("AddToClientUpdateList", &WorldObject::AddToClientUpdateList)
				.def("RemoveFromClientUpdateList", &WorldObject::RemoveFromClientUpdateList)
				.def("BuildUpdateData", &WorldObject::BuildUpdateData)
				.def("SummonCreature", &WorldObject::SummonCreature)
				.def("SummonObject", &WorldObject::SummonObject)
				.def("isActiveObject", &WorldObject::isActiveObject)
				.def("SetActiveObjectState", &WorldObject::SetActiveObjectState)
				.def("GetViewPoint", &WorldObject::GetViewPoint)
				.def("PrintCoordinatesError", &WorldObject::PrintCoordinatesError),


				class_<Unit, WorldObject>("Unit")
				.def("AddToWorld", &Unit::AddToWorld)
				.def("RemoveFromWorld", &Unit::RemoveFromWorld)
				.def("CleanupsBeforeDelete", &Unit::CleanupsBeforeDelete)
				.def("GetObjectBoundingRadius", &Unit::GetObjectBoundingRadius)
				.def("getFearManager", &Unit::getFearManager)
				.def("GetDiminishing", &Unit::GetDiminishing)
				.def("IncrDiminishing", &Unit::IncrDiminishing)
				.def("ApplyDiminishingToDuration", &Unit::ApplyDiminishingToDuration)
				.def("ApplyDiminishingAura", &Unit::ApplyDiminishingAura)
				.def("ClearDiminishings", &Unit::ClearDiminishings)
				.def("Update", &Unit::Update)
				.def("setAttackTimer", &Unit::setAttackTimer)
				.def("resetAttackTimer", &Unit::resetAttackTimer)
				.def("getAttackTimer", &Unit::getAttackTimer)
				.def("isAttackReady", &Unit::isAttackReady)
				.def("haveOffhandWeapon", &Unit::haveOffhandWeapon)
				.def("UpdateMeleeAttackingState", &Unit::UpdateMeleeAttackingState)
				.def("CanUseEquippedWeapon", &Unit::CanUseEquippedWeapon)
				.def("GetCombatReach", &Unit::GetCombatReach)
				.def("CanReachWithMeleeAttack", &Unit::CanReachWithMeleeAttack)
				.def("_addAttacker", &Unit::_addAttacker)
				.def("_removeAttacker", &Unit::_removeAttacker)
				.def("getAttackerForHelper", &Unit::getAttackerForHelper)
				.def("Attack", &Unit::Attack)
				.def("AttackedBy", &Unit::AttackedBy)
				.def("CastStop", &Unit::CastStop)
				.def("GetCombatDistance", static_cast<bool(Unit::*)(Unit*)>(&Creature::AttackStop))
				.def("GetCombatDistance", static_cast<bool(Unit::*)(bool)>(&Creature::AttackStop))
				.def("RemoveAllAttackers", &Unit::RemoveAllAttackers)
				.def("getAttackers", &Unit::getAttackers)
				.def("isAttackingPlayer", &Unit::isAttackingPlayer)
				.def("getVictim", &Unit::getVictim)
				.def("CombatStop", &Unit::CombatStop)
				.def("CombatStopWithPets", &Unit::CombatStopWithPets)
				.def("StopAttackFaction", &Unit::StopAttackFaction)
				.def("StopAttackObject", &Unit::StopAttackObject)
				.def("SelectRandomUnfriendlyTarget", &Unit::SelectRandomUnfriendlyTarget)
				.def("SelectRandomFriendlyTarget", &Unit::SelectRandomFriendlyTarget)
				.def("hasNegativeAuraWithInterruptFlag", &Unit::hasNegativeAuraWithInterruptFlag)
				.def("SendMeleeAttackStop", &Unit::SendMeleeAttackStop)
				.def("SendMeleeAttackStart", &Unit::SendMeleeAttackStart)
				.def("Evade", &Unit::Evade)
				.def("EvadeStart", &Unit::EvadeStart)
				.def("EvadeStop", &Unit::EvadeStop)
				.def("isEvading", &Unit::isEvading)
				.def("addUnitState", &Unit::addUnitState)
				.def("hasUnitState", &Unit::hasUnitState)
				.def("clearUnitState", &Unit::clearUnitState)
				.def("CanFreeMove", &Unit::CanFreeMove)
				.def("getLevel", &Unit::getLevel)
				.def("GetLevelForTarget", &Unit::GetLevelForTarget)
				.def("SetLevel", &Unit::SetLevel)
				.def("getRace", &Unit::getRace)
				.def("getRaceMask", &Unit::getRaceMask)
				.def("getClass", &Unit::getClass)
				.def("getClassMask", &Unit::getClassMask)
				.def("getGender", &Unit::getGender)
				.def("GetStat", &Unit::GetStat)
				.def("SetStat", &Unit::SetStat)
				.def("GetArmor", &Unit::GetArmor)
				.def("SetArmor", &Unit::SetArmor)
				.def("GetResistance", &Unit::GetResistance)
				.def("SetResistance", &Unit::SetResistance)
				.def("GetHealth", &Unit::GetHealth)
				.def("GetMaxHealth", &Unit::GetMaxHealth)
				.def("GetHealthPercent", &Unit::GetHealthPercent)
				.def("SetHealth", &Unit::SetHealth)
				.def("SetMaxHealth", &Unit::SetMaxHealth)
				.def("SetHealthPercent", &Unit::SetHealthPercent)
				.def("ModifyHealth", &Unit::ModifyHealth)
				.def("getPowerType", &Unit::getPowerType)
				.def("setPowerType", &Unit::setPowerType)
				.def("GetPower", &Unit::GetPower)
				.def("GetMaxPower", &Unit::GetMaxPower)
				.def("SetPower", &Unit::SetPower)
				.def("SetMaxPower", &Unit::SetMaxPower)
				.def("ModifyPower", &Unit::ModifyPower)
				.def("ApplyPowerMod", &Unit::ApplyPowerMod)
				.def("ApplyMaxPowerMod", &Unit::ApplyMaxPowerMod)
				.def("GetAttackTime", &Unit::GetAttackTime)
				.def("SetAttackTime", &Unit::SetAttackTime)
				.def("ApplyAttackTimePercentMod", &Unit::ApplyAttackTimePercentMod)
				.def("ApplyCastTimePercentMod", &Unit::ApplyCastTimePercentMod)
				.def("GetSheath", &Unit::GetSheath)
				.def("SetSheath", &Unit::SetSheath)
				.def("getFaction", &Unit::getFaction)
				.def("setFaction", &Unit::setFaction)
				.def("getFactionTemplateEntry", &Unit::getFactionTemplateEntry)
				.def("IsHostileTo", &Unit::IsHostileTo)
				.def("IsHostileToPlayers", &Unit::IsHostileToPlayers)
				.def("IsFriendlyTo", &Unit::IsFriendlyTo)
				.def("IsNeutralToAll", &Unit::IsNeutralToAll)
				.def("IsContestedGuard", &Unit::IsContestedGuard)
				.def("IsPvP", &Unit::IsPvP)
				.def("SetPvP", &Unit::SetPvP)
				.def("GetCreatureType", &Unit::GetCreatureType)
				.def("GetCreatureTypeMask", &Unit::GetCreatureTypeMask)
				.def("GetCreatureType", &Unit::GetCreatureType)
				.def("getStandState", &Unit::getStandState)
				.def("IsSitState", &Unit::IsSitState)
				.def("IsStandState", &Unit::IsStandState)
				.def("SetStandState", &Unit::SetStandState)
				.def("IsMounted", &Unit::IsMounted)
				.def("GetMountID", &Unit::GetMountID)
				.def("Mount", &Unit::Mount)
				.def("Unmount", &Unit::Unmount)
				.def("GetMaxSkillValueForLevel", &Unit::GetMaxSkillValueForLevel)
				.def("DealDamageMods", &Unit::DealDamageMods)
				.def("DealDamage", &Unit::DealDamage)
				.def("DealHeal", &Unit::DealHeal)
				.def("PetOwnerKilledUnit", &Unit::PetOwnerKilledUnit)
				.def("ProcDamageAndSpell", &Unit::ProcDamageAndSpell)
				.def("ProcDamageAndSpellFor", &Unit::ProcDamageAndSpellFor)
				.def("HandleEmote", &Unit::HandleEmote)
				.def("HandleEmoteCommand", &Unit::HandleEmoteCommand)
				.def("HandleEmoteState", &Unit::HandleEmoteState)
				.def("AttackerStateUpdate", &Unit::AttackerStateUpdate)
				.def("MeleeMissChanceCalc", &Unit::MeleeMissChanceCalc)
				.def("CalculateMeleeDamage", &Unit::CalculateMeleeDamage)
				.def("DealMeleeDamage", &Unit::DealMeleeDamage)
				.def("CalculateSpellDamage", static_cast<void(Unit::*)(SpellNonMeleeDamage*, int32, SpellEntry const*, WeaponAttackType)>(&Creature::CalculateSpellDamage))
				.def("DealSpellDamage", &Unit::DealSpellDamage)
				.def("MeleeSpellMissChance", &Unit::MeleeSpellMissChance)
				.def("MeleeSpellHitResult", &Unit::MeleeSpellHitResult)
				.def("MagicSpellHitResult", &Unit::MagicSpellHitResult)
				.def("SpellHitResult", &Unit::SpellHitResult)
				.def("GetUnitDodgeChance", &Unit::GetUnitDodgeChance)
				.def("GetUnitParryChance", &Unit::GetUnitParryChance)
				.def("GetUnitBlockChance", &Unit::GetUnitBlockChance)
				.def("GetUnitCriticalChance", &Unit::GetUnitCriticalChance)
				.def("GetShieldBlockValue", &Unit::GetShieldBlockValue)
				.def("GetUnitMeleeSkill", &Unit::GetUnitMeleeSkill)
				.def("GetDefenseSkillValue", &Unit::GetDefenseSkillValue)
				.def("GetWeaponSkillValue", &Unit::GetWeaponSkillValue)
				.def("GetWeaponProcChance", &Unit::GetWeaponProcChance)
				.def("GetPPMProcChance", &Unit::GetPPMProcChance)
				.def("RollMeleeOutcomeAgainst", static_cast<MeleeHitOutcome(Unit::*)(const Unit*, WeaponAttackType) const>(&Unit::RollMeleeOutcomeAgainst))
				.def("RollMeleeOutcomeAgainst", static_cast<MeleeHitOutcome(Unit::*)(const Unit*, WeaponAttackType, int32, int32, int32, int32, int32, bool) const>(&Unit::RollMeleeOutcomeAgainst))
				.def("isVendor", &Unit::isVendor)
				.def("isTrainer", &Unit::isTrainer)
				.def("isQuestGiver", &Unit::isQuestGiver)
				.def("isGossip", &Unit::isGossip)
				.def("isTaxi", &Unit::isTaxi)
				.def("isGuildMaster", &Unit::isGuildMaster)
				.def("isBattleMaster", &Unit::isBattleMaster)
				.def("isBanker", &Unit::isBanker)
				.def("isInnkeeper", &Unit::isInnkeeper)
				.def("isSpiritHealer", &Unit::isSpiritHealer)
				.def("isSpiritGuide", &Unit::isSpiritGuide)
				.def("isTabardDesigner", &Unit::isTabardDesigner)
				.def("isAuctioner", &Unit::isAuctioner)
				.def("isArmorer", &Unit::isArmorer)
				.def("isServiceProvider", &Unit::isServiceProvider)
				.def("isSpiritService", &Unit::isSpiritService)
				.def("IsTaxiFlying", &Unit::IsTaxiFlying)
				.def("isInCombat", &Unit::isInCombat)
				.def("SetInCombatState", &Unit::SetInCombatState)
				.def("SetInCombatWith", &Unit::SetInCombatWith)
				.def("ClearInCombat", &Unit::ClearInCombat)
				.def("GetCombatTimer", &Unit::GetCombatTimer)
				.def("SetCombatTimer", &Unit::SetCombatTimer)
				.def("GetSpellAuraHolderBounds", static_cast<Unit::SpellAuraHolderBounds(Unit::*)(uint32)>(&Unit::GetSpellAuraHolderBounds))
				.def("HasAuraType", &Unit::HasAuraType)
				.def("HasAffectedAura", &Unit::HasAffectedAura)
				.def("HasAura", static_cast<bool(Unit::*)(uint32, SpellEffectIndex) const>(&Unit::HasAura))
				.def("HasAura", static_cast<bool(Unit::*)(uint32) const>(&Unit::HasAura))
				.def("HasSpell", &Unit::HasSpell)
				.def("HasStealthAura", &Unit::HasStealthAura)
				.def("HasInvisibilityAura", &Unit::HasInvisibilityAura)
				.def("isFeared", &Unit::isFeared)
				.def("isInRoots", &Unit::isInRoots)
				.def("IsPolymorphed", &Unit::IsPolymorphed)
				.def("isFrozen", &Unit::isFrozen)
				.def("RemoveSpellbyDamageTaken", &Unit::RemoveSpellbyDamageTaken)
				.def("isTargetableForAttack", &Unit::isTargetableForAttack)
				.def("isPassiveToHostile", &Unit::isPassiveToHostile)
				.def("IsInWater", &Unit::IsInWater)
				.def("IsUnderWater", &Unit::IsUnderWater)
				.def("isInAccessablePlaceFor", &Unit::isInAccessablePlaceFor)
				.def("SendHealSpellLog", &Unit::SendHealSpellLog)
				.def("SendFlyingAnimation", &Unit::SendFlyingAnimation)
				.def("SendEnergizeSpellLog", &Unit::SendEnergizeSpellLog)
				.def("EnergizeBySpell", &Unit::EnergizeBySpell)
				.def("SpellNonMeleeDamageLog", &Unit::SpellNonMeleeDamageLog)
				.def("CastSpell", static_cast<void(Unit::*)(Unit*, uint32, bool, Item *, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastSpell))
				.def("CastSpell", static_cast<void(Unit::*)(Unit*, SpellEntry const *, bool, Item*, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastSpell))
				.def("CastCustomSpell", static_cast<void(Unit::*)(Unit*, uint32, int32 const*, int32 const*, int32 const*, bool, Item *, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastCustomSpell))
				.def("CastCustomSpell", static_cast<void(Unit::*)(Unit*, SpellEntry const *, int32 const*, int32 const*, int32 const*, bool, Item *, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastCustomSpell))
				.def("CastSpell", static_cast<void(Unit::*)(float, float, float, uint32, bool, Item *, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastSpell))
				.def("CastSpell", static_cast<void(Unit::*)(float, float, float, SpellEntry const *, bool, Item *, Aura*, ObjectGuid, SpellEntry const*)>(&Unit::CastSpell))
				.def("CanCast", &Unit::CanCast)
				.def("DeMorph", &Unit::DeMorph)
				.def("SendAttackStateUpdate", static_cast<void(Unit::*)(CalcDamageInfo*)>(&Unit::SendAttackStateUpdate))
				.def("SendAttackStateUpdate", static_cast<void(Unit::*)(uint32, Unit*, uint8, SpellSchoolMask, uint32, uint32, uint32, VictimState, uint32)>(&Unit::SendAttackStateUpdate))
				.def("SendSpellNonMeleeDamageLog", static_cast<void(Unit::*)(SpellNonMeleeDamage*)>(&Unit::SendSpellNonMeleeDamageLog))
				.def("SendSpellNonMeleeDamageLog", static_cast<void(Unit::*)(Unit*, uint32, uint32, SpellSchoolMask, uint32, uint32, bool, uint32, bool CriticalHit)>(&Unit::SendSpellNonMeleeDamageLog))
				.def("SendPeriodicAuraLog", &Unit::SendPeriodicAuraLog)
				.def("SendSpellMiss", &Unit::SendSpellMiss)
				.def("NearTeleportTo", &Unit::NearTeleportTo)
				.def("MonsterMoveWithSpeed", &Unit::MonsterMoveWithSpeed)
				.def("SendHeartBeat", &Unit::SendHeartBeat)
				.def("IsLevitating", &Unit::IsLevitating)
				.def("IsWalking", &Unit::IsWalking)
				.def("IsRooted", &Unit::IsRooted)
				.def("SetRoot", &Unit::SetRoot)
				.def("SetWaterWalk", &Unit::SetWaterWalk)
				.def("SetInFront", &Unit::SetInFront)
				.def("SetFacingTo", &Unit::SetFacingTo)
				.def("SetFacingToObject", &Unit::SetFacingToObject)
				.def("isAlive", &Unit::isAlive)
				.def("isDead", &Unit::isDead)
				.def("getDeathState", &Unit::getDeathState)
				.def("SetDeathState", &Unit::SetDeathState)
				.def("GetOwnerGuid", &Unit::GetOwnerGuid)
				.def("SetOwnerGuid", &Unit::SetOwnerGuid)
				.def("GetCreatorGuid", &Unit::GetCreatorGuid)
				.def("SetCreatorGuid", &Unit::SetCreatorGuid)
				.def("GetPetGuid", &Unit::GetPetGuid)
				.def("SetPetGuid", &Unit::SetPetGuid)
				.def("GetCharmerGuid", &Unit::GetCharmerGuid)
				.def("SetCharmerGuid", &Unit::SetCharmerGuid)
				.def("GetCharmGuid", &Unit::GetCharmGuid)
				.def("SetCharmGuid", &Unit::SetCharmGuid)
				.def("GetTargetGuid", &Unit::GetTargetGuid)
				.def("SetTargetGuid", &Unit::SetTargetGuid)
				.def("GetChannelObjectGuid", &Unit::GetChannelObjectGuid)
				.def("SetChannelObjectGuid", &Unit::SetChannelObjectGuid)
				.def("GetMiniPet", &Unit::GetMiniPet)
				.def("GetCharmerOrOwnerGuid", &Unit::GetCharmerOrOwnerGuid)
				.def("GetCharmerOrOwnerOrOwnGuid", &Unit::GetCharmerOrOwnerOrOwnGuid)
				.def("isCharmedOwnedByPlayerOrPlayer", &Unit::isCharmedOwnedByPlayerOrPlayer)
				.def("GetSpellModOwner", &Unit::GetSpellModOwner)
				.def("GetOwner", &Unit::GetOwner)
				.def("GetPet", &Unit::GetPet)
				.def("GetCharmer", &Unit::GetCharmer)
				.def("GetCharm", &Unit::GetCharm)
				.def("Uncharm", &Unit::Uncharm)
				.def("GetCharmerOrOwner", &Unit::GetCharmerOrOwner)
				.def("GetCharmerOrOwnerOrSelf", &Unit::GetCharmerOrOwnerOrSelf)
				.def("IsCharmerOrOwnerPlayerOrPlayerItself", &Unit::IsCharmerOrOwnerPlayerOrPlayerItself)
				.def("GetCharmerOrOwnerPlayerOrPlayerItself", static_cast<Player*(Unit::*)()>(&Unit::GetCharmerOrOwnerPlayerOrPlayerItself))
				.def("GetCharmerOrOwnerPlayerOrPlayerItself", static_cast<const Player*(Unit::*)() const>(&Unit::GetCharmerOrOwnerPlayerOrPlayerItself))
				//.def("GetCombatDistance", static_cast<float(Unit::*)(const Unit*) const>(&Unit::GetCombatDistance))
				.def("SetPet", &Unit::SetPet)
				.def("SetCharm", &Unit::SetCharm)
				.def("AddGuardian", &Unit::AddGuardian)
				.def("RemoveGuardian", &Unit::RemoveGuardian)
				.def("RemoveGuardians", &Unit::RemoveGuardians)
				.def("FindGuardianWithEntry", &Unit::FindGuardianWithEntry)
				.def("isCharmed", &Unit::isCharmed)
				.def("GetCharmInfo", &Unit::GetCharmInfo)
				.def("InitCharmInfo", &Unit::InitCharmInfo)
				.def("GetTotemGuid", &Unit::GetTotemGuid)
				.def("GetTotem", &Unit::GetTotem)
				.def("IsAllTotemSlotsUsed", &Unit::IsAllTotemSlotsUsed)
				.def("_AddTotem", &Unit::_AddTotem)
				.def("_RemoveTotem", &Unit::_RemoveTotem)
				.def("AddSpellAuraHolder", &Unit::AddSpellAuraHolder)
				.def("AddAuraToModList", &Unit::AddAuraToModList)
				.def("CanStackAura", &Unit::CanStackAura)
				.def("IsMorePowerfulSpellActive", &Unit::IsMorePowerfulSpellActive)
				.def("RemoveAura", static_cast<void(Unit::*)(Aura*, AuraRemoveMode)>(&Unit::RemoveAura))
				.def("RemoveAura", static_cast<void(Unit::*)(uint32, SpellEffectIndex, Aura*)>(&Unit::RemoveAura))
				.def("RemoveSpellAuraHolder", &Unit::RemoveSpellAuraHolder)
				.def("RemoveSingleAuraFromSpellAuraHolder", static_cast<void(Unit::*)(SpellAuraHolder *, SpellEffectIndex, AuraRemoveMode)>(&Unit::RemoveSingleAuraFromSpellAuraHolder))
				.def("RemoveSingleAuraFromSpellAuraHolder", static_cast<void(Unit::*)(uint32, SpellEffectIndex, ObjectGuid, AuraRemoveMode)>(&Unit::RemoveSingleAuraFromSpellAuraHolder))
				.def("RemoveAurasDueToSpell", &Unit::RemoveAurasDueToSpell)
				.def("RemoveAurasDueToItemSpell", &Unit::RemoveAurasDueToItemSpell)
				.def("RemoveAurasByCasterSpell", &Unit::RemoveAurasByCasterSpell)
				.def("RemoveAurasDueToSpellBySteal", &Unit::RemoveAurasDueToSpellBySteal)
				.def("RemoveAurasDueToSpellByCancel", &Unit::RemoveAurasDueToSpellByCancel)
				.def("RemoveNotOwnSingleTargetAuras", &Unit::RemoveNotOwnSingleTargetAuras)
				.def("RemoveAurasAtMechanicImmunity", &Unit::RemoveAurasAtMechanicImmunity)
				.def("RemoveSpellsCausingAura", static_cast<void(Unit::*)(AuraType)>(&Unit::RemoveSpellsCausingAura))
				.def("RemoveSpellsCausingAura", static_cast<void(Unit::*)(AuraType, SpellAuraHolder*)>(&Unit::RemoveSpellsCausingAura))
				.def("RemoveRankAurasDueToSpell", &Unit::RemoveRankAurasDueToSpell)
				.def("RemoveNoStackAurasDueToAuraHolder", &Unit::RemoveNoStackAurasDueToAuraHolder)
				.def("RemoveAurasWithInterruptFlags", &Unit::RemoveAurasWithInterruptFlags)
				.def("RemoveAurasWithAttribute", &Unit::RemoveAurasWithAttribute)
				.def("RemoveAurasWithDispelType", &Unit::RemoveAurasWithDispelType)
				.def("RemoveAllAuras", &Unit::RemoveAllAuras)
				.def("RemoveAllAurasOnDeath", &Unit::RemoveAllAurasOnDeath)
				.def("RemoveAllAurasOnEvade", &Unit::RemoveAllAurasOnEvade)
				.def("RemoveAuraHolderFromStack", &Unit::RemoveAuraHolderFromStack)
				.def("RemoveAuraHolderDueToSpellByDispel", &Unit::RemoveAuraHolderDueToSpellByDispel)
				.def("DelaySpellAuraHolder", &Unit::DelaySpellAuraHolder)
				.def("SetCreateStat", &Unit::SetCreateStat)
				.def("SetCreateHealth", &Unit::SetCreateHealth)
				.def("GetCreateHealth", &Unit::GetCreateHealth)
				.def("SetCreateMana", &Unit::SetCreateMana)
				.def("GetCreateMana", &Unit::GetCreateMana)
				.def("GetCreatePowers", &Unit::GetCreatePowers)
				.def("GetCreateStat", &Unit::GetCreateStat)
				.def("SetCurrentCastedSpell", &Unit::SetCurrentCastedSpell)
				.def("ProhibitSpellSchool", &Unit::ProhibitSpellSchool)
				.def("InterruptSpell", &Unit::InterruptSpell)
				.def("FinishSpell", &Unit::FinishSpell)
				.def("IsNonMeleeSpellCasted", &Unit::IsNonMeleeSpellCasted)
				.def("InterruptNonMeleeSpells", &Unit::InterruptNonMeleeSpells)
				.def("GetCurrentSpell", &Unit::GetCurrentSpell)
				.def("FindCurrentSpellBySpellId", &Unit::FindCurrentSpellBySpellId)
				.def("CheckAndIncreaseCastCounter", &Unit::CheckAndIncreaseCastCounter)
				.def("DecreaseCastCounter", &Unit::DecreaseCastCounter)
				.def("GetShapeshiftForm", &Unit::GetShapeshiftForm)
				.def("SetShapeshiftForm", &Unit::SetShapeshiftForm)
				.def("IsInFeralForm", &Unit::IsInFeralForm)
				.def("IsInDisallowedMountForm", &Unit::IsInDisallowedMountForm)
				.def("HandleStatModifier", &Unit::HandleStatModifier)
				.def("SetModifierValue", &Unit::SetModifierValue)
				.def("GetModifierValue", &Unit::GetModifierValue)
				.def("GetTotalStatValue", &Unit::GetTotalStatValue)
				.def("GetTotalAuraModValue", &Unit::GetTotalAuraModValue)
				.def("GetSpellSchoolByAuraGroup", &Unit::GetSpellSchoolByAuraGroup)
				.def("GetStatByAuraGroup", &Unit::GetStatByAuraGroup)
				.def("GetPowerTypeByAuraGroup", &Unit::GetPowerTypeByAuraGroup)
				.def("CanModifyStats", &Unit::CanModifyStats)
				.def("SetCanModifyStats", &Unit::SetCanModifyStats)
				.def("UpdateStats", &Unit::UpdateStats)
				.def("UpdateAllStats", &Unit::UpdateAllStats)
				.def("UpdateResistances", &Unit::UpdateResistances)
				.def("UpdateArmor", &Unit::UpdateArmor)
				.def("UpdateMaxHealth", &Unit::UpdateMaxHealth)
				.def("UpdateMaxPower", &Unit::UpdateMaxPower)
				.def("UpdateAttackPowerAndDamage", &Unit::UpdateAttackPowerAndDamage)
				.def("UpdateDamagePhysical", &Unit::UpdateDamagePhysical)
				.def("GetTotalAttackPowerValue", &Unit::GetTotalAttackPowerValue)
				.def("GetWeaponDamageRange", &Unit::GetWeaponDamageRange)
				.def("SetBaseWeaponDamage", &Unit::SetBaseWeaponDamage)
				.def("GetVisibility", &Unit::GetVisibility)
				.def("SetVisibility", &Unit::SetVisibility)
				.def("UpdateVisibilityAndView", &Unit::UpdateVisibilityAndView)
				.def("isVisibleForOrDetect", &Unit::isVisibleForOrDetect)
				.def("canDetectInvisibilityOf", &Unit::canDetectInvisibilityOf)
				.def("isVisibleForInState", &Unit::isVisibleForInState)
				.def("IsVisibleInGridForPlayer", &Unit::IsVisibleInGridForPlayer)
				.def("isInvisibleForAlive", &Unit::isInvisibleForAlive)
				.def("GetSingleCastSpellTargets", static_cast<Unit::SingleCastSpellTargetMap&(Unit::*)()>(&Unit::GetSingleCastSpellTargets))
				.def("GetSingleCastSpellTargets", static_cast<const Unit::SingleCastSpellTargetMap&(Unit::*)() const>(&Unit::GetSingleCastSpellTargets))
				.def("RemoveSpellsCausingAura", static_cast<void(Unit::*)(AuraType)>(&Unit::RemoveSpellsCausingAura))
				.def("CanHaveThreatList", &Unit::CanHaveThreatList)
				.def("AddThreat", &Unit::AddThreat)
				.def("ApplyTotalThreatModifier", &Unit::ApplyTotalThreatModifier)
				.def("DeleteThreatList", &Unit::DeleteThreatList)
				.def("IsSecondChoiceTarget", &Unit::IsSecondChoiceTarget)
				.def("SelectHostileTarget", &Unit::SelectHostileTarget)
				.def("TauntApply", &Unit::TauntApply)
				.def("TauntFadeOut", &Unit::TauntFadeOut)
				.def("FixateTarget", &Unit::FixateTarget)
				.def("getThreatManager", static_cast<ThreatManager&(Unit::*)()>(&Unit::getThreatManager))
				.def("getThreatManager", static_cast<const ThreatManager&(Unit::*)() const>(&Unit::getThreatManager))
				.def("addHatedBy", &Unit::addHatedBy)
				.def("removeHatedBy", &Unit::removeHatedBy)
				.def("getHostileRefManager", &Unit::getHostileRefManager)
				.def("GetAura", static_cast<Aura*(Unit::*)(uint32, SpellEffectIndex)>(&Unit::GetAura))
				.def("GetAura", static_cast<Aura*(Unit::*)(AuraType, SpellFamily, uint64, ObjectGuid)>(&Unit::GetAura))
				.def("GetSpellAuraHolder", static_cast<SpellAuraHolder*(Unit::*)(uint32) const>(&Unit::GetSpellAuraHolder))
				.def("GetSpellAuraHolder", static_cast<SpellAuraHolder*(Unit::*)(uint32, ObjectGuid) const>(&Unit::GetSpellAuraHolder))
				.def("GetSpellAuraHolderMap", static_cast<Unit::SpellAuraHolderMap&(Unit::*)()>(&Unit::GetSpellAuraHolderMap))
				.def("GetSpellAuraHolderMap", static_cast<const Unit::SpellAuraHolderMap&(Unit::*)() const>(&Unit::GetSpellAuraHolderMap))
				.def("GetAurasByType", &Unit::GetAurasByType)
				.def("ApplyAuraProcTriggerDamage", &Unit::ApplyAuraProcTriggerDamage)
				.def("GetTotalAuraModifier", &Unit::GetTotalAuraModifier)
				.def("GetTotalAuraMultiplier", &Unit::GetTotalAuraMultiplier)
				.def("GetMaxPositiveAuraModifier", &Unit::GetMaxPositiveAuraModifier)
				.def("GetMaxNegativeAuraModifier", &Unit::GetMaxNegativeAuraModifier)
				.def("GetTotalAuraModifierByMiscMask", &Unit::GetTotalAuraModifierByMiscMask)
				.def("GetTotalAuraMultiplierByMiscMask", &Unit::GetTotalAuraMultiplierByMiscMask)
				.def("GetMaxPositiveAuraModifierByMiscMask", &Unit::GetMaxPositiveAuraModifierByMiscMask)
				.def("GetMaxNegativeAuraModifierByMiscMask", &Unit::GetMaxNegativeAuraModifierByMiscMask)
				.def("GetTotalAuraModifierByMiscValue", &Unit::GetTotalAuraModifierByMiscValue)
				.def("GetTotalAuraMultiplierByMiscValue", &Unit::GetTotalAuraMultiplierByMiscValue)
				.def("GetMaxPositiveAuraModifierByMiscValue", &Unit::GetMaxPositiveAuraModifierByMiscValue)
				.def("GetMaxNegativeAuraModifierByMiscValue", &Unit::GetMaxNegativeAuraModifierByMiscValue)
				.def("GetDummyAura", &Unit::GetDummyAura)
				.def("GetDisplayId", &Unit::GetDisplayId)
				.def("SetDisplayId", &Unit::SetDisplayId)
				.def("GetNativeDisplayId", &Unit::GetNativeDisplayId)
				.def("SetNativeDisplayId", &Unit::SetNativeDisplayId)
				.def("setTransForm", &Unit::setTransForm)
				.def("getTransForm", &Unit::getTransForm)
				.def("UpdateModelData", &Unit::UpdateModelData)
				.def("GetDynObject", static_cast<DynamicObject*(Unit::*)(uint32, SpellEffectIndex)>(&Unit::GetDynObject))
				.def("GetDynObject", static_cast<DynamicObject*(Unit::*)(uint32)>(&Unit::GetDynObject))
				.def("AddDynObject", &Unit::AddDynObject)
				.def("RemoveDynObject", &Unit::RemoveDynObject)
				.def("RemoveDynObjectWithGUID", &Unit::RemoveDynObjectWithGUID)
				.def("RemoveAllDynObjects", &Unit::RemoveAllDynObjects)
				.def("GetGameObject", &Unit::GetGameObject)
				.def("AddGameObject", &Unit::AddGameObject)
				.def("RemoveGameObject", static_cast<void(Unit::*)(GameObject*, bool)>(&Unit::RemoveGameObject))
				.def("RemoveGameObject", static_cast<void(Unit::*)(uint32, bool)>(&Unit::RemoveGameObject))
				.def("RemoveAllGameObjects", &Unit::RemoveAllGameObjects)
				.def("CalculateDamage", &Unit::CalculateDamage)
				.def("GetAPMultiplier", &Unit::GetAPMultiplier)
				.def("ModifyAuraState", &Unit::ModifyAuraState)
				.def("HasAuraState", &Unit::HasAuraState)
				.def("UnsummonAllTotems", &Unit::UnsummonAllTotems)
				.def("UnsummonIfTotem", &Unit::UnsummonIfTotem)
				.def("SelectMagnetTarget", &Unit::SelectMagnetTarget)
				.def("SpellBonusWithCoeffs", &Unit::SpellBonusWithCoeffs)
				.def("SpellBaseDamageBonusDone", &Unit::SpellBaseDamageBonusDone)
				.def("SpellBaseDamageBonusTaken", &Unit::SpellBaseDamageBonusTaken)
				.def("SpellDamageBonusDone", &Unit::SpellDamageBonusDone)
				.def("SpellDamageBonusTaken", &Unit::SpellDamageBonusTaken)
				.def("SpellBaseHealingBonusDone", &Unit::SpellBaseHealingBonusDone)
				.def("SpellBaseHealingBonusTaken", &Unit::SpellBaseHealingBonusTaken)
				.def("SpellHealingBonusDone", &Unit::SpellHealingBonusDone)
				.def("SpellHealingBonusTaken", &Unit::SpellHealingBonusTaken)
				.def("MeleeDamageBonusDone", &Unit::MeleeDamageBonusDone)
				.def("MeleeDamageBonusTaken", &Unit::MeleeDamageBonusTaken)
				.def("IsSpellBlocked", &Unit::IsSpellBlocked)
				.def("IsSpellCrit", &Unit::IsSpellCrit)
				.def("SpellCriticalDamageBonus", &Unit::SpellCriticalDamageBonus)
				.def("SpellCriticalHealingBonus", &Unit::SpellCriticalHealingBonus)
				.def("IsTriggeredAtSpellProcEvent", &Unit::IsTriggeredAtSpellProcEvent)
				.def("HandleDummyAuraProc", &Unit::HandleDummyAuraProc)
				.def("HandleHasteAuraProc", &Unit::HandleHasteAuraProc)
				.def("HandleProcTriggerSpellAuraProc", &Unit::HandleProcTriggerSpellAuraProc)
				.def("HandleProcTriggerDamageAuraProc", &Unit::HandleProcTriggerDamageAuraProc)
				.def("HandleOverrideClassScriptAuraProc", &Unit::HandleOverrideClassScriptAuraProc)
				.def("HandleModCastingSpeedNotStackAuraProc", &Unit::HandleModCastingSpeedNotStackAuraProc)
				.def("HandleReflectSpellsSchoolAuraProc", &Unit::HandleReflectSpellsSchoolAuraProc)
				.def("HandleModPowerCostSchoolAuraProc", &Unit::HandleModPowerCostSchoolAuraProc)
				.def("HandleMechanicImmuneResistanceAuraProc", &Unit::HandleMechanicImmuneResistanceAuraProc)
				.def("HandleModResistanceAuraProc", &Unit::HandleModResistanceAuraProc)
				.def("HandleNULLProc", &Unit::HandleNULLProc)
				.def("HandleCantTrigger", &Unit::HandleCantTrigger)
				.def("SetLastManaUse", &Unit::SetLastManaUse)
				.def("IsUnderLastManaUseEffect", &Unit::IsUnderLastManaUseEffect)
				.def("SetContestedPvP", &Unit::SetContestedPvP)
				.def("ApplySpellImmune", &Unit::ApplySpellImmune)
				.def("ApplySpellDispelImmunity", &Unit::ApplySpellDispelImmunity)
				.def("IsImmuneToSpell", static_cast<bool(Unit::*)(uint32)>(&Unit::IsImmuneToSpell))
				.def("IsImmunedToDamage", &Unit::IsImmunedToDamage)
				.def("IsImmuneToSpellEffect", &Unit::IsImmuneToSpellEffect)
				.def("getAttackEnabled", &Unit::getAttackEnabled)
				.def("setAttackEnabled", &Unit::setAttackEnabled)
				.def("CalcArmorReducedDamage", &Unit::CalcArmorReducedDamage)
				.def("RollBinarySpellEffectResist", &Unit::RollBinarySpellEffectResist)
				.def("RollSpellEffectResist", &Unit::RollSpellEffectResist)
				.def("CalculateDamageAbsorbAndResist", &Unit::CalculateDamageAbsorbAndResist)
				.def("CalculateAbsorbResistBlock", &Unit::CalculateAbsorbResistBlock)
				.def("UpdateSpeed", &Unit::UpdateSpeed)
				.def("GetSpeed", &Unit::GetSpeed)
				.def("GetSpeedRate", &Unit::GetSpeedRate)
				.def("SetSpeedRate", &Unit::SetSpeedRate)
				.def("isHover", &Unit::isHover)
				.def("_RemoveAllAuraMods", &Unit::_RemoveAllAuraMods)
				.def("_ApplyAllAuraMods", &Unit::_ApplyAllAuraMods)
				.def("CalculateSpellDamage", static_cast<int32(Unit::*)(Unit const*, SpellEntry const*, SpellEffectIndex, int32 const*)>(&Creature::CalculateSpellDamage))
				.def("CalculateLevelPenalty", &Unit::CalculateLevelPenalty)
				.def("addFollower", &Unit::addFollower)
				.def("removeFollower", &Unit::removeFollower)
				.def("GetMotionMaster", &Unit::GetMotionMaster)
				.def("IsStopped", &Unit::IsStopped)
				.def("StopMoving", &Unit::StopMoving)
				.def("SetFeared", &Unit::SetFeared)
				.def("SetConfused", &Unit::SetConfused)
				.def("SetFeignDeath", &Unit::SetFeignDeath)
				.def("AddComboPointHolder", &Unit::AddComboPointHolder)
				.def("RemoveComboPointHolder", &Unit::RemoveComboPointHolder)
				.def("ClearComboPointHolders", &Unit::ClearComboPointHolders)
				.def("SendPetCastFail", &Unit::SendPetCastFail)
				.def("SendPetActionFeedback", &Unit::SendPetActionFeedback)
				.def("SendPetTalk", &Unit::SendPetTalk)
				.def("SendPetAIReaction", &Unit::SendPetAIReaction)
				.def("propagateSpeedChange", &Unit::propagateSpeedChange)
				.def("ClearAllReactives", &Unit::ClearAllReactives)
				.def("StartReactiveTimer", &Unit::StartReactiveTimer)
				.def("UpdateReactives", &Unit::UpdateReactives)
				.def("UpdateAuraForGroup", &Unit::UpdateAuraForGroup)
				.def("AddPetAura", &Unit::AddPetAura)
				.def("RemovePetAura", &Unit::RemovePetAura)
				.def("GetDamageForAuraType", &Unit::GetDamageForAuraType)
				.def("SetDamageForAuraType", &Unit::SetDamageForAuraType)
				.def("ScheduleAINotify", &Unit::ScheduleAINotify)
				.def("IsAINotifyScheduled", &Unit::IsAINotifyScheduled)
				.def("_SetAINotifyScheduled", &Unit::_SetAINotifyScheduled)
				.def("OnRelocated", &Unit::OnRelocated)
				.def("IsLinkingEventTrigger", &Unit::IsLinkingEventTrigger)
				.def("SetCanChase", &Unit::SetCanChase)
				.def("GetCanChase", &Unit::GetCanChase)
				.def("CanAttackPlayer", &Unit::CanAttackPlayer)
				.def("SetCanAttackPlayer", &Unit::SetCanAttackPlayer),

				class_<Creature, Unit>("Creature")
				.def("AddToWorld", &Creature::AddToWorld)
				.def("RemoveFromWorld", &Creature::RemoveFromWorld)
				.def("Create", &Creature::Create)
				.def("LoadCreatureAddon", &Creature::LoadCreatureAddon)
				.def("SelectLevel", &Creature::SelectLevel)
				.def("LoadEquipment", &Creature::LoadEquipment)
				.def("HasStaticDBSpawnData", &Creature::HasStaticDBSpawnData)
				.def("GetSubName", &Creature::GetSubName)
				.def("Update", &Creature::Update)
				.def("RegenerateAll", &Creature::RegenerateAll)
				.def("GetRespawnCoord", &Creature::GetRespawnCoord)
				.def("GetEquipmentId", &Creature::GetEquipmentId)
				.def("GetSubtype", &Creature::GetSubtype)
				.def("IsPet", &Creature::IsPet)
				.def("IsTotem", &Creature::IsTotem)
				.def("IsTemporarySummon", &Creature::IsTemporarySummon)
				.def("IsCorpse", &Creature::IsCorpse)
				.def("IsDespawned", &Creature::IsDespawned)
				.def("SetCorpseDelay", &Creature::SetCorpseDelay)
				.def("IsRacialLeader", &Creature::IsRacialLeader)
				.def("IsCivilian", &Creature::IsCivilian)
				.def("IsGuard", &Creature::IsGuard)
				.def("CanWalk", &Creature::CanWalk)
				.def("CanSwim", &Creature::CanSwim)
				.def("CanFly", &Creature::CanFly)
				.def("SetReactState", &Creature::SetReactState)
				.def("GetReactState", &Creature::GetReactState)
				.def("HasReactState", &Creature::HasReactState)
				.def("IsTrainerOf", &Creature::IsTrainerOf)
				.def("CanInteractWithBattleMaster", &Creature::CanInteractWithBattleMaster)
				.def("CanTrainAndResetTalentsOf", &Creature::CanTrainAndResetTalentsOf)
				.def("IsOutOfThreatArea", &Creature::IsOutOfThreatArea)
				.def("FillGuidsListFromThreatList", &Creature::FillGuidsListFromThreatList)
				.def("IsImmuneToSpell", &Creature::IsImmuneToSpell)
				.def("IsImmuneToSpellEffect", &Creature::IsImmuneToSpellEffect)
				.def("IsElite", &Creature::IsElite)
				.def("IsWorldBoss", &Creature::IsWorldBoss)
				.def("getRank", &Creature::getRank)
				.def("GetLevelForTarget", &Creature::GetLevelForTarget)
				.def("IsInEvadeMode", &Creature::IsInEvadeMode)
				.def("AIM_Initialize", &Creature::AIM_Initialize)
				.def("AI", static_cast<CreatureAI*(Creature::*)()>(&Creature::AI))
				.def("SetWalk", &Creature::SetWalk)
				.def("SetLevitate", &Creature::SetLevitate)
				.def("SetRoot", &Creature::SetRoot)
				.def("SetWaterWalk", &Creature::SetWaterWalk)
				.def("GetShieldBlockValue", &Creature::GetShieldBlockValue)
				.def("GetMeleeDamageSchoolMask", &Creature::GetMeleeDamageSchoolMask)
				.def("SetMeleeDamageSchool", &Creature::SetMeleeDamageSchool)
				.def("_AddCreatureSpellCooldown", &Creature::_AddCreatureSpellCooldown)
				.def("_AddCreatureCategoryCooldown", &Creature::_AddCreatureCategoryCooldown)
				.def("AddCreatureSpellCooldown", &Creature::AddCreatureSpellCooldown)
				.def("HasSpellCooldown", &Creature::HasSpellCooldown)
				.def("HasCategoryCooldown", &Creature::HasCategoryCooldown)
				.def("HasSpell", &Creature::HasSpell)
				.def("UpdateEntry", &Creature::UpdateEntry)
				.def("ApplyGameEventSpells", &Creature::ApplyGameEventSpells)
				.def("UpdateStats", &Creature::UpdateStats)
				.def("UpdateAllStats", &Creature::UpdateAllStats)
				.def("UpdateResistances", &Creature::UpdateResistances)
				.def("UpdateArmor", &Creature::UpdateArmor)
				.def("UpdateMaxHealth", &Creature::UpdateMaxHealth)
				.def("UpdateMaxPower", &Creature::UpdateMaxPower)
				.def("UpdateAttackPowerAndDamage", &Creature::UpdateAttackPowerAndDamage)
				.def("UpdateDamagePhysical", &Creature::UpdateDamagePhysical)
				.def("GetCurrentEquipmentId", &Creature::GetCurrentEquipmentId)
				.def("GetSpellDamageMod", &Creature::GetSpellDamageMod)
				.def("GetVendorItems", &Creature::GetVendorItems)
				.def("GetVendorTemplateItems", &Creature::GetVendorTemplateItems)
				.def("GetVendorItemCurrentCount", &Creature::GetVendorItemCurrentCount)
				.def("UpdateVendorItemCurrentCount", &Creature::UpdateVendorItemCurrentCount)
				.def("GetTrainerTemplateSpells", &Creature::GetTrainerTemplateSpells)
				.def("GetTrainerSpells", &Creature::GetTrainerSpells)
				.def("GetCreatureInfo", &Creature::GetCreatureInfo)
				.def("GetCreatureAddon", &Creature::GetCreatureAddon)
				.def("ChooseDisplayId", &Creature::ChooseDisplayId)
				.def("GetAIName", &Creature::GetAIName)
				.def("GetScriptName", &Creature::GetScriptName)
				.def("GetScriptId", &Creature::GetScriptId)
				.def("GetNameForLocaleIdx", &Creature::GetNameForLocaleIdx)
				.def("SetDeathState", &Creature::SetDeathState)
				.def("LoadFromDB", &Creature::LoadFromDB)
				.def("SaveToDB", static_cast<void(Creature::*)()>(&Creature::SaveToDB))
				.def("SaveToDB", static_cast<void(Creature::*)(uint32)>(&Creature::SaveToDB))
				.def("DeleteFromDB", static_cast<void(Creature::*)()>(&Creature::DeleteFromDB))
				.def("PrepareBodyLootState", &Creature::PrepareBodyLootState)
				.def("GetLootRecipientGuid", &Creature::GetLootRecipientGuid)
				.def("GetLootGroupRecipientId", &Creature::GetLootGroupRecipientId)
				.def("GetLootRecipient", &Creature::GetLootRecipient)
				.def("GetGroupLootRecipient", &Creature::GetGroupLootRecipient)
				.def("HasLootRecipient", &Creature::HasLootRecipient)
				.def("IsGroupLootRecipient", &Creature::IsGroupLootRecipient)
				.def("SetLootRecipient", &Creature::SetLootRecipient)
				.def("AllLootRemovedFromCorpse", &Creature::AllLootRemovedFromCorpse)
				.def("GetOriginalLootRecipient", &Creature::GetOriginalLootRecipient)
				.def("ReachWithSpellAttack", &Creature::ReachWithSpellAttack)
				.def("ReachWithSpellCure", &Creature::ReachWithSpellCure)
				.def("GetAttackDistance", &Creature::GetAttackDistance)
				.def("SendAIReaction", &Creature::SendAIReaction)
				.def("DoFleeToGetAssistance", &Creature::DoFleeToGetAssistance)
				.def("CallForHelp", &Creature::CallForHelp)
				.def("CallAssistance", &Creature::CallAssistance)
				.def("SetNoCallAssistance", &Creature::SetNoCallAssistance)
				.def("SetNoSearchAssistance", &Creature::SetNoSearchAssistance)
				.def("HasSearchedAssistance", &Creature::HasSearchedAssistance)
				.def("CanAssistTo", &Creature::CanAssistTo)
				.def("CanInitiateAttack", &Creature::CanInitiateAttack)
				.def("GetDefaultMovementType", &Creature::GetDefaultMovementType)
				.def("SetDefaultMovementType", &Creature::SetDefaultMovementType)
				.def("GetCurrentCell", &Creature::GetCurrentCell)
				.def("SetCurrentCell", &Creature::SetCurrentCell)
				.def("IsVisibleInGridForPlayer", &Creature::IsVisibleInGridForPlayer)
				.def("RemoveCorpse", &Creature::RemoveCorpse)
				.def("IsDeadByDefault", &Creature::IsDeadByDefault)
				.def("ForcedDespawn", &Creature::ForcedDespawn)
				.def("GetRespawnTime", &Creature::GetRespawnTime)
				.def("GetRespawnTimeEx", &Creature::GetRespawnTimeEx)
				.def("SetRespawnTime", &Creature::SetRespawnTime)
				.def("Respawn", &Creature::Respawn)
				.def("SaveRespawnTime", &Creature::SaveRespawnTime)
				.def("GetRespawnDelay", &Creature::GetRespawnDelay)
				.def("SetRespawnDelay", &Creature::SetRespawnDelay)
				.def("GetRespawnRadius", &Creature::GetRespawnRadius)
				.def("SetRespawnRadius", &Creature::SetRespawnRadius)
				.def("AddToRemoveListInMaps", &Creature::AddToRemoveListInMaps)
				.def("SpawnInMaps", &Creature::SpawnInMaps)
				.def("StartGroupLoot", &Creature::StartGroupLoot)
				.def("SendZoneUnderAttackMessage", &Creature::SendZoneUnderAttackMessage)
				.def("SetInCombatWithZone", &Creature::SetInCombatWithZone)
				//.def("SelectAttackingTarget", &Creature::SelectAttackingTarget)
				//.def("SelectAttackingTarget", &Creature::SelectAttackingTarget)
				.def("HasQuest", &Creature::HasQuest)
				.def("HasInvolvedQuest", &Creature::HasInvolvedQuest)
				.def("GetGridRef", &Creature::GetGridRef)
				.def("IsRegeneratingHealth", &Creature::IsRegeneratingHealth)
				.def("GetPetAutoSpellSize", &Creature::GetPetAutoSpellSize)
				.def("GetPetAutoSpellOnPos", &Creature::GetPetAutoSpellOnPos)
				.def("SetCombatStartPosition", &Creature::SetCombatStartPosition)
				.def("GetCombatStartPosition", &Creature::GetCombatStartPosition)
				.def("SetDeadByDefault", &Creature::SetDeadByDefault)
				.def("SetFactionTemporary", &Creature::SetFactionTemporary)
				.def("ClearTemporaryFaction", &Creature::ClearTemporaryFaction)
				.def("GetTemporaryFactionFlags", &Creature::GetTemporaryFactionFlags)
				.def("SendAreaSpiritHealerQueryOpcode", &Creature::SendAreaSpiritHealerQueryOpcode)
				.def("SetVirtualItem", &Creature::SetVirtualItem)
				.def("SetVirtualItemRaw", &Creature::SetVirtualItemRaw)
				.def("SearchFormation", &Creature::SearchFormation)
				.def("GetFormation", &Creature::GetFormation)
				.def("SetFormation", &Creature::SetFormation),

				class_<Player, Unit>("Player")
				.def("GetAccountId", &Player::GetAccountId)
				.def("GetRaidProgress", &Player::GetRaidProgress)
				.def("SetRaidProgress", &Player::SetRaidProgress)
				.def("UpdateRaidProgress", &Player::UpdateRaidProgress)
				.def("CleanupsBeforeDelete", &Player::CleanupsBeforeDelete)
				.def("InitVisibleBits", &Player::InitVisibleBits)
				.def("AddToWorld", &Player::AddToWorld)
				.def("RemoveFromWorld", &Player::RemoveFromWorld)
				.def("TeleportTo", static_cast<bool(Player::*)(uint32, float, float, float, float, uint32, bool)>(&Player::TeleportTo))
				.def("TeleportTo", static_cast<bool(Player::*)(WorldLocation const&, uint32)>(&Player::TeleportTo))
				.def("TeleportToBGEntryPoint", &Player::TeleportToBGEntryPoint)
				.def("SetSummonPoint", &Player::SetSummonPoint)
				.def("SummonIfPossible", &Player::SummonIfPossible)
				//.def("Create", &Player::Create)
				.def("Update", &Player::Update)
				.def("BuildEnumData", &Player::BuildEnumData)
				.def("SetInWater", &Player::SetInWater)
				.def("IsInWater", &Player::IsInWater)
				.def("IsUnderWater", &Player::IsUnderWater)
				.def("SendInitialPacketsBeforeAddToMap", &Player::SendInitialPacketsBeforeAddToMap)
				.def("SendInitialPacketsAfterAddToMap", &Player::SendInitialPacketsAfterAddToMap)
				.def("SendTransferAborted", &Player::SendTransferAborted)
				.def("SendInstanceResetWarning", &Player::SendInstanceResetWarning)
				.def("GetNPCIfCanInteractWith", &Player::GetNPCIfCanInteractWith)
				.def("GetGameObjectIfCanInteractWith", &Player::GetGameObjectIfCanInteractWith)
				.def("ToggleAFK", &Player::ToggleAFK)
				.def("ToggleDND", &Player::ToggleDND)
				.def("isAFK", &Player::isAFK)
				.def("isDND", &Player::isDND)
				.def("chatTag", &Player::chatTag)
				//.def("GetSocial", &Player::GetSocial)
				.def("InitTaxiNodes", &Player::InitTaxiNodes)
				.def("ActivateTaxiPathTo", static_cast<bool(Player::*)(std::vector<uint32> const&, Creature* npc, uint32)>(&Player::ActivateTaxiPathTo))
				.def("ActivateTaxiPathTo", static_cast<bool(Player::*)(uint32, uint32)>(&Player::ActivateTaxiPathTo))
				.def("ContinueTaxiFlight", &Player::ContinueTaxiFlight)
				.def("isAcceptTickets", &Player::isAcceptTickets)
				.def("SetAcceptTicket", &Player::SetAcceptTicket)
				.def("isAcceptWhispers", &Player::isAcceptWhispers)
				.def("SetAcceptWhispers", &Player::SetAcceptWhispers)
				.def("isGameMaster", &Player::isGameMaster)
				.def("SetGameMaster", &Player::SetGameMaster)
				.def("isGMChat", &Player::isGMChat)
				.def("SetGMChat", &Player::SetGMChat)
				.def("isTaxiCheater", &Player::isTaxiCheater)
				.def("SetTaxiCheater", &Player::SetTaxiCheater)
				.def("isGMVisible", &Player::isGMVisible)
				.def("SetGMVisible", &Player::SetGMVisible)
				.def("SetPvPDeath", &Player::SetPvPDeath)
				.def("GetAuctionAccessMode", &Player::GetAuctionAccessMode)
				.def("SetAuctionAccessMode", &Player::SetAuctionAccessMode)
				.def("GiveXP", &Player::GiveXP)
				.def("GiveLevel", &Player::GiveLevel)
				.def("InitStatsForLevel", &Player::InitStatsForLevel)
				.def("setXPRate", &Player::setXPRate)
				.def("getXPRate", &Player::getXPRate)
				.def("setInstantFlight", &Player::setInstantFlight)
				.def("getInstantFlight", &Player::getInstantFlight)
				.def("GetTotalPlayedTime", &Player::GetTotalPlayedTime)
				.def("GetLevelPlayedTime", &Player::GetLevelPlayedTime)
				.def("SetDeathState", &Player::SetDeathState)
				.def("GetRestBonus", &Player::GetRestBonus)
				.def("SetRestBonus", &Player::SetRestBonus)
				.def("GetRestType", &Player::GetRestType)
				.def("SetRestType", &Player::SetRestType)
				.def("GetTimeInnEnter", &Player::GetTimeInnEnter)
				.def("RemovePet", &Player::RemovePet)
				.def("RemoveMiniPet", &Player::RemoveMiniPet)
				.def("GetMiniPet", &Player::GetMiniPet)
				.def("_SetMiniPet", &Player::_SetMiniPet)
				.def("Say", &Player::Say)
				.def("Yell", &Player::Yell)
				.def("TextEmote", &Player::TextEmote)
				.def("Whisper", &Player::Whisper)
				.def("BuildPlayerChat", &Player::BuildPlayerChat)
				.def("SetVirtualItemSlot", &Player::SetVirtualItemSlot)
				.def("SetSheath", &Player::SetSheath)
				.def("FindEquipSlot", &Player::FindEquipSlot)
				.def("GetItemCount", &Player::GetItemCount)
				.def("GetItemByGuid", &Player::GetItemByGuid)
				.def("GetItemByPos", static_cast<Item*(Player::*)(uint16) const>(&Player::GetItemByPos))
				.def("GetItemByPos", static_cast<Item*(Player::*)(uint8, uint8) const>(&Player::GetItemByPos))
				.def("GetWeaponForAttack", static_cast<Item*(Player::*)(WeaponAttackType) const>(&Player::GetWeaponForAttack))
				.def("GetWeaponForAttack", static_cast<Item*(Player::*)(WeaponAttackType, bool, bool) const>(&Player::GetWeaponForAttack))
				.def("GetShield", &Player::GetShield)
				.def("GetAttackBySlot", &Player::GetAttackBySlot)
				.def("GetItemUpdateQueue", &Player::GetItemUpdateQueue)
				.def("IsBagPos", &Player::IsBagPos)
				.def("GetBankBagSlotCount", &Player::GetBankBagSlotCount)
				.def("SetBankBagSlotCount", &Player::SetBankBagSlotCount)
				.def("HasItemCount", &Player::HasItemCount)
				.def("HasItemFitToSpellReqirements", &Player::HasItemFitToSpellReqirements)
				.def("CanNoReagentCast", &Player::CanNoReagentCast)
				.def("HasItemWithIdEquipped", &Player::HasItemWithIdEquipped)
				.def("CanTakeMoreSimilarItems", static_cast<InventoryResult(Player::*)(uint32, uint32) const>(&Player::CanTakeMoreSimilarItems))
				.def("CanTakeMoreSimilarItems", static_cast<InventoryResult(Player::*)(Item*) const>(&Player::CanTakeMoreSimilarItems))
				.def("CanStoreNewItem", &Player::CanStoreNewItem)
				.def("CanStoreItem", &Player::CanStoreItem)
				.def("CanStoreItems", &Player::CanStoreItems)
				.def("CanEquipNewItem", &Player::CanEquipNewItem)
				.def("CanEquipItem", &Player::CanEquipItem)
				.def("CanEquipUniqueItem", static_cast<InventoryResult(Player::*)(Item*, uint8) const>(&Player::CanEquipUniqueItem))
				.def("CanEquipUniqueItem", static_cast<InventoryResult(Player::*)(ItemPrototype const*, uint8) const>(&Player::CanEquipUniqueItem))
				.def("CanUnequipItems", &Player::CanUnequipItems)
				.def("CanUnequipItem", &Player::CanUnequipItem)
				.def("CanBankItem", &Player::CanBankItem)
				.def("CanUseItem", static_cast<InventoryResult(Player::*)(Item*, bool) const>(&Player::CanUseItem))
				.def("HasItemTotemCategory", &Player::HasItemTotemCategory)
				.def("CanUseItem", static_cast<InventoryResult(Player::*)(ItemPrototype const*, bool) const>(&Player::CanUseItem))
				.def("CanUseAmmo", &Player::CanUseAmmo)
				.def("StoreNewItem", &Player::StoreNewItem)
				.def("StoreItem", &Player::StoreItem)
				.def("EquipNewItem", &Player::EquipNewItem)
				.def("EquipItem", &Player::EquipItem)
				.def("AutoUnequipOffhandIfNeed", &Player::AutoUnequipOffhandIfNeed)
				.def("StoreNewItemInBestSlots", &Player::StoreNewItemInBestSlots)
				.def("StoreNewItemInInventorySlot", &Player::StoreNewItemInInventorySlot)
				.def("AutoStoreLoot", static_cast<void(Player::*)(uint32, LootStore const&, bool broadcast, uint8, uint8)>(&Player::AutoStoreLoot))
				.def("AutoStoreLoot", static_cast<void(Player::*)(Loot&, bool, uint8 bag, uint8)>(&Player::AutoStoreLoot))
				.def("ConvertItem", &Player::ConvertItem)
				.def("_CanTakeMoreSimilarItems", &Player::_CanTakeMoreSimilarItems)
				.def("_CanStoreItem", &Player::_CanStoreItem)
				.def("ApplyEquipCooldown", &Player::ApplyEquipCooldown)
				.def("SetAmmo", &Player::SetAmmo)
				.def("RemoveAmmo", &Player::RemoveAmmo)
				.def("GetAmmoDPS", &Player::GetAmmoDPS)
				.def("CheckAmmoCompatibility", &Player::CheckAmmoCompatibility)
				.def("QuickEquipItem", &Player::QuickEquipItem)
				.def("VisualizeItem", &Player::VisualizeItem)
				.def("SetVisibleItemSlot", &Player::SetVisibleItemSlot)
				.def("BankItem", static_cast<Item*(Player::*)(ItemPosCountVec const&, Item*, bool)>(&Player::BankItem))
				//.def("BankItem", static_cast<Item*(Player::*)(uint16, Item*, bool)>(&Player::BankItem))
				.def("RemoveItem", &Player::RemoveItem)
				.def("MoveItemFromInventory", &Player::MoveItemFromInventory)
				.def("MoveItemToInventory", &Player::MoveItemToInventory)
				.def("RemoveItemDependentAurasAndCasts", &Player::RemoveItemDependentAurasAndCasts)
				.def("DestroyItem", &Player::DestroyItem)
				.def("DestroyItemCount", static_cast<void(Player::*)(uint32, uint32, bool, bool)>(&Player::DestroyItemCount))
				.def("DestroyItemCount", static_cast<void(Player::*)(Item*, uint32&, bool)>(&Player::DestroyItemCount))
				.def("DestroyConjuredItems", &Player::DestroyConjuredItems)
				.def("DestroyZoneLimitedItem", &Player::DestroyZoneLimitedItem)
				.def("SplitItem", &Player::SplitItem)
				.def("SwapItem", &Player::SwapItem)
				.def("AddItemToBuyBackSlot", &Player::AddItemToBuyBackSlot)
				.def("GetItemFromBuyBackSlot", &Player::GetItemFromBuyBackSlot)
				.def("RemoveItemFromBuyBackSlot", &Player::RemoveItemFromBuyBackSlot)
				.def("GetMaxKeyringSize", &Player::GetMaxKeyringSize)
				.def("SendEquipError", &Player::SendEquipError)
				.def("SendBuyError", &Player::SendBuyError)
				.def("SendSellError", &Player::SendSellError)
				.def("AddWeaponProficiency", &Player::AddWeaponProficiency)
				.def("AddArmorProficiency", &Player::AddArmorProficiency)
				.def("GetWeaponProficiency", &Player::GetWeaponProficiency)
				.def("GetArmorProficiency", &Player::GetArmorProficiency)
				.def("IsTwoHandUsed", &Player::IsTwoHandUsed)
				.def("SendNewItem", &Player::SendNewItem)
				.def("BuyItemFromVendor", &Player::BuyItemFromVendor)
				.def("GetReputationPriceDiscount", &Player::GetReputationPriceDiscount)
				.def("GetTrader", &Player::GetTrader)
				.def("GetTradeData", &Player::GetTradeData)
				.def("TradeCancel", &Player::TradeCancel)
				.def("UpdateEnchantTime", &Player::UpdateEnchantTime)
				.def("UpdateItemDuration", &Player::UpdateItemDuration)
				.def("AddEnchantmentDurations", &Player::AddEnchantmentDurations)
				.def("RemoveEnchantmentDurations", &Player::RemoveEnchantmentDurations)
				.def("RemoveAllEnchantments", &Player::RemoveAllEnchantments)
				.def("AddEnchantmentDuration", &Player::AddEnchantmentDuration)
				.def("ApplyEnchantment", static_cast<void(Player::*)(Item*, EnchantmentSlot, bool, bool, bool)>(&Player::ApplyEnchantment))
				.def("ApplyEnchantment", static_cast<void(Player::*)(Item*, bool)>(&Player::ApplyEnchantment))
				.def("SendEnchantmentDurations", &Player::SendEnchantmentDurations)
				.def("AddItemDurations", &Player::AddItemDurations)
				.def("RemoveItemDurations", &Player::RemoveItemDurations)
				.def("SendItemDurations", &Player::SendItemDurations)
				.def("LoadCorpse", &Player::LoadCorpse)
				.def("LoadPet", &Player::LoadPet)
				.def("summonGuardian", &Player::summonGuardian)
				.def("GetEquipGearScore", &Player::GetEquipGearScore)
				.def("ResetCachedGearScore", &Player::ResetCachedGearScore)
				.def("PrepareGossipMenu", &Player::PrepareGossipMenu)
				.def("SendPreparedGossip", &Player::SendPreparedGossip)
				.def("OnGossipSelect", &Player::OnGossipSelect)
				.def("GetGossipTextId", static_cast<uint32(Player::*)(uint32)>(&Player::GetGossipTextId))
				.def("GetGossipTextId", static_cast<uint32(Player::*)(WorldObject*)>(&Player::GetGossipTextId))
				.def("GetDefaultGossipMenuForSource", &Player::GetDefaultGossipMenuForSource)
				.def("GetQuestLevelForPlayer", &Player::GetQuestLevelForPlayer)
				.def("PrepareQuestMenu", &Player::PrepareQuestMenu)
				.def("SendPreparedQuest", &Player::SendPreparedQuest)
				.def("IsActiveQuest", &Player::IsActiveQuest)
				.def("IsCurrentQuest", &Player::IsCurrentQuest)
				.def("GetNextQuest", &Player::GetNextQuest)
				.def("CanSeeStartQuest", &Player::CanSeeStartQuest)
				.def("CanTakeQuest", &Player::CanTakeQuest)
				.def("CanAddQuest", &Player::CanAddQuest)
				.def("CanCompleteQuest", &Player::CanCompleteQuest)
				.def("CanCompleteRepeatableQuest", &Player::CanCompleteRepeatableQuest)
				.def("CanRewardQuest", static_cast<bool(Player::*)(Quest const *, bool) const>(&Player::CanRewardQuest))
				.def("CanRewardQuest", static_cast<bool(Player::*)(Quest const *, uint32, bool) const>(&Player::CanRewardQuest))
				.def("AddQuest", &Player::AddQuest)
				.def("CompleteQuest", &Player::CompleteQuest)
				.def("IncompleteQuest", &Player::IncompleteQuest)
				.def("RewardQuest", &Player::RewardQuest)
				.def("FailQuest", &Player::FailQuest)
				.def("SatisfyQuestSkill", &Player::SatisfyQuestSkill)
				.def("SatisfyQuestLevel", &Player::SatisfyQuestLevel)
				.def("SatisfyQuestLog", &Player::SatisfyQuestLog)
				.def("SatisfyQuestPreviousQuest", &Player::SatisfyQuestPreviousQuest)
				.def("SatisfyQuestClass", &Player::SatisfyQuestClass)
				.def("SatisfyQuestRace", &Player::SatisfyQuestRace)
				.def("SatisfyQuestReputation", &Player::SatisfyQuestReputation)
				.def("SatisfyQuestStatus", &Player::SatisfyQuestStatus)
				.def("SatisfyQuestTimed", &Player::SatisfyQuestTimed)
				.def("SatisfyQuestExclusiveGroup", &Player::SatisfyQuestExclusiveGroup)
				.def("SatisfyQuestNextChain", &Player::SatisfyQuestNextChain)
				.def("SatisfyQuestPrevChain", &Player::SatisfyQuestPrevChain)
				.def("CanGiveQuestSourceItemIfNeed", &Player::CanGiveQuestSourceItemIfNeed)
				.def("GiveQuestSourceItemIfNeed", &Player::GiveQuestSourceItemIfNeed)
				.def("TakeQuestSourceItem", &Player::TakeQuestSourceItem)
				.def("GetQuestRewardStatus", &Player::GetQuestRewardStatus)
				.def("GetQuestStatus", &Player::GetQuestStatus)
				.def("SetQuestStatus", &Player::SetQuestStatus)
				.def("FindQuestSlot", &Player::FindQuestSlot)
				.def("GetQuestSlotQuestId", &Player::GetQuestSlotQuestId)
				.def("SetQuestSlot", &Player::SetQuestSlot)
				.def("SetUInt32Value", &Player::SetUInt32Value)
				.def("SetUInt32Value", &Player::SetUInt32Value)
				.def("SetUInt32Value", &Player::SetUInt32Value)
				.def("SetQuestSlotCounter", &Player::SetQuestSlotCounter)
				.def("GetUInt32Value", &Player::GetUInt32Value)
				.def("SetUInt32Value", &Player::SetUInt32Value)
				.def("SetQuestSlotState", &Player::SetQuestSlotState)
				.def("RemoveQuestSlotState", &Player::RemoveQuestSlotState)
				.def("SetQuestSlotTimer", &Player::SetQuestSlotTimer)
				.def("SwapQuestSlot", &Player::SwapQuestSlot)
				.def("GetUInt32Value", &Player::GetUInt32Value)
				.def("GetUInt32Value", &Player::GetUInt32Value)
				.def("SetUInt32Value", &Player::SetUInt32Value)
				.def("SetUInt32Value", &Player::SetUInt32Value)
				.def("GetReqKillOrCastCurrentCount", &Player::GetReqKillOrCastCurrentCount)
				.def("AreaExploredOrEventHappens", &Player::AreaExploredOrEventHappens)
				.def("GroupEventHappens", &Player::GroupEventHappens)
				.def("ItemAddedQuestCheck", &Player::ItemAddedQuestCheck)
				.def("ItemRemovedQuestCheck", &Player::ItemRemovedQuestCheck)
				.def("KilledMonster", &Player::KilledMonster)
				.def("KilledMonsterCredit", &Player::KilledMonsterCredit)
				.def("CastedCreatureOrGO", &Player::CastedCreatureOrGO)
				.def("TalkedToCreature", &Player::TalkedToCreature)
				.def("MoneyChanged", &Player::MoneyChanged)
				.def("ReputationChanged", &Player::ReputationChanged)
				.def("HasQuestForItem", &Player::HasQuestForItem)
				.def("HasQuestForGO", &Player::HasQuestForGO)
				.def("UpdateForQuestWorldObjects", &Player::UpdateForQuestWorldObjects)
				.def("CanShareQuest", &Player::CanShareQuest)
				.def("SendQuestCompleteEvent", &Player::SendQuestCompleteEvent)
				.def("SendQuestReward", &Player::SendQuestReward)
				.def("SendQuestFailed", &Player::SendQuestFailed)
				.def("SendQuestTimerFailed", &Player::SendQuestTimerFailed)
				.def("SendCanTakeQuestResponse", &Player::SendCanTakeQuestResponse)
				.def("SendQuestConfirmAccept", &Player::SendQuestConfirmAccept)
				.def("SendPushToPartyResponse", &Player::SendPushToPartyResponse)
				.def("SendQuestUpdateAddItem", &Player::SendQuestUpdateAddItem)
				.def("SendQuestUpdateAddCreatureOrGo", &Player::SendQuestUpdateAddCreatureOrGo)
				.def("GetDividerGuid", &Player::GetDividerGuid)
				.def("SetDividerGuid", &Player::SetDividerGuid)
				.def("ClearDividerGuid", &Player::ClearDividerGuid)
				.def("GetInGameTime", &Player::GetInGameTime)
				.def("SetInGameTime", &Player::SetInGameTime)
				.def("AddTimedQuest", &Player::AddTimedQuest)
				.def("RemoveTimedQuest", &Player::RemoveTimedQuest)
				.def("LoadFromDB", &Player::LoadFromDB)
				.def("GetZoneIdFromDB", &Player::GetZoneIdFromDB)
				.def("GetLevelFromDB", &Player::GetLevelFromDB)
				.def("LoadPositionFromDB", &Player::LoadPositionFromDB)
				.def("SaveToDB", &Player::SaveToDB)
				.def("SaveInventoryAndGoldToDB", &Player::SaveInventoryAndGoldToDB)
				.def("SaveGoldToDB", &Player::SaveGoldToDB)
				.def("SetUInt32ValueInArray", &Player::SetUInt32ValueInArray)
				//.def("SetFloatValueInArray", &Player::SetFloatValueInArray)
				.def("SavePositionInDB", &Player::SavePositionInDB)
				.def("DeleteFromDB", &Player::DeleteFromDB)
				.def("SendPetTameFailure", &Player::SendPetTameFailure)
				.def("SetBindPoint", &Player::SetBindPoint)
				.def("SendTalentWipeConfirm", &Player::SendTalentWipeConfirm)
				.def("RewardRage", &Player::RewardRage)
				.def("SendPetSkillWipeConfirm", &Player::SendPetSkillWipeConfirm)
				//.def("CalcRage", &Player::CalcRage)
				.def("RegenerateAll", &Player::RegenerateAll)
				.def("Regenerate", &Player::Regenerate)
				.def("RegenerateHealth", &Player::RegenerateHealth)
				.def("setRegenTimer", &Player::setRegenTimer)
				.def("setWeaponChangeTimer", &Player::setWeaponChangeTimer)
				.def("GetMoney", &Player::GetMoney)
				.def("ModifyMoney", &Player::ModifyMoney)
				.def("SetMoney", &Player::SetMoney)
				.def("MoneyChanged", &Player::MoneyChanged)
				.def("getQuestStatusMap", &Player::getQuestStatusMap)
				.def("GetSelectionGuid", &Player::GetSelectionGuid)
				.def("SetSelectionGuid", &Player::SetSelectionGuid)
				.def("GetComboPoints", &Player::GetComboPoints)
				.def("GetComboTargetGuid", &Player::GetComboTargetGuid)
				.def("AddComboPoints", &Player::AddComboPoints)
				.def("ClearComboPoints", &Player::ClearComboPoints)
				.def("SetComboPoints", &Player::SetComboPoints)
				.def("SendMailResult", &Player::SendMailResult)
				.def("SendNewMail", &Player::SendNewMail)
				.def("UpdateNextMailTimeAndUnreads", &Player::UpdateNextMailTimeAndUnreads)
				.def("AddNewMailDeliverTime", &Player::AddNewMailDeliverTime)
				.def("RemoveMail", &Player::RemoveMail)
				.def("AddMail", &Player::AddMail)
				.def("GetMailSize", &Player::GetMailSize)
				.def("GetMail", &Player::GetMail)
				.def("GetMailBegin", &Player::GetMailBegin)
				.def("GetMailEnd", &Player::GetMailEnd)
				.def("GetMItem", &Player::GetMItem)
				.def("AddMItem", &Player::AddMItem)
				.def("RemoveMItem", &Player::RemoveMItem)
				.def("PetSpellInitialize", &Player::PetSpellInitialize)
				.def("CharmSpellInitialize", &Player::CharmSpellInitialize)
				.def("PossessSpellInitialize", &Player::PossessSpellInitialize)
				.def("RemovePetActionBar", &Player::RemovePetActionBar)
				.def("HasSpell", &Player::HasSpell)
				.def("HasActiveSpell", &Player::HasActiveSpell)
				.def("GetTrainerSpellState", &Player::GetTrainerSpellState)
				.def("IsSpellFitByClassAndRace", &Player::IsSpellFitByClassAndRace)
				.def("IsNeedCastPassiveLikeSpellAtLearn", &Player::IsNeedCastPassiveLikeSpellAtLearn)
				.def("IsImmuneToSpellEffect", &Player::IsImmuneToSpellEffect)
				.def("KnockBackFrom", &Player::KnockBackFrom)
				.def("SendProficiency", &Player::SendProficiency)
				.def("SendInitialSpells", &Player::SendInitialSpells)
				.def("addSpell", &Player::addSpell)
				.def("learnSpell", &Player::learnSpell)
				.def("removeSpell", &Player::removeSpell)
				.def("resetSpells", &Player::resetSpells)
				.def("learnDefaultSpells", &Player::learnDefaultSpells)
				.def("learnQuestRewardedSpells", static_cast<void(Player::*)()>(&Player::learnQuestRewardedSpells))
				.def("learnQuestRewardedSpells", static_cast<void(Player::*)(Quest const*)>(&Player::learnQuestRewardedSpells))
				.def("learnSpellHighRank", &Player::learnSpellHighRank)
				.def("GetFreeTalentPoints", &Player::GetFreeTalentPoints)
				.def("SetFreeTalentPoints", &Player::SetFreeTalentPoints)
				.def("UpdateFreeTalentPoints", &Player::UpdateFreeTalentPoints)
				.def("resetTalents", &Player::resetTalents)
				.def("resetTalentsCost", &Player::resetTalentsCost)
				.def("InitTalentForLevel", &Player::InitTalentForLevel)
				.def("LearnTalent", &Player::LearnTalent)
				.def("CalculateTalentsPoints", &Player::CalculateTalentsPoints)
				.def("GetFreePrimaryProfessionPoints", &Player::GetFreePrimaryProfessionPoints)
				.def("SetFreePrimaryProfessions", &Player::SetFreePrimaryProfessions)
				.def("InitPrimaryProfessions", &Player::InitPrimaryProfessions)
				.def("GetSpellMap", static_cast<PlayerSpellMap const&(Player::*)() const>(&Player::GetSpellMap))
				.def("GetSpellMap", static_cast<PlayerSpellMap&(Player::*)()>(&Player::GetSpellMap))
				.def("GetSpellCooldownMap", &Player::GetSpellCooldownMap)
				.def("AddSpellMod", &Player::AddSpellMod)
				.def("IsAffectedBySpellmod", &Player::IsAffectedBySpellmod)
				.def("GetSpellMod", &Player::GetSpellMod)
				.def("RemoveSpellMods", &Player::RemoveSpellMods)
				.def("HasSpellCooldown", &Player::HasSpellCooldown)
				.def("GetSpellCooldownDelay", &Player::GetSpellCooldownDelay)
				.def("AddSpellAndCategoryCooldowns", &Player::AddSpellAndCategoryCooldowns)
				.def("AddSpellCooldown", &Player::AddSpellCooldown)
				.def("SendCooldownEvent", &Player::SendCooldownEvent)
				.def("ProhibitSpellSchool", &Player::ProhibitSpellSchool)
				.def("RemoveSpellCooldown", &Player::RemoveSpellCooldown)
				.def("RemoveSpellCategoryCooldown", &Player::RemoveSpellCategoryCooldown)
				.def("SendClearCooldown", &Player::SendClearCooldown)
				.def("GetGlobalCooldownMgr", &Player::GetGlobalCooldownMgr)
				.def("RemoveAllSpellCooldown", &Player::RemoveAllSpellCooldown)
				.def("_LoadSpellCooldowns", &Player::_LoadSpellCooldowns)
				.def("_SaveSpellCooldowns", &Player::_SaveSpellCooldowns)
				.def("setResurrectRequestData", &Player::setResurrectRequestData)
				.def("clearResurrectRequestData", &Player::clearResurrectRequestData)
				.def("isRessurectRequestedBy", &Player::isRessurectRequestedBy)
				.def("isRessurectRequested", &Player::isRessurectRequested)
				.def("ResurectUsingRequestData", &Player::ResurectUsingRequestData)
				.def("getCinematic", &Player::getCinematic)
				.def("setCinematic", &Player::setCinematic)
				.def("IsActionButtonDataValid", &Player::IsActionButtonDataValid)
				.def("addActionButton", &Player::addActionButton)
				.def("removeActionButton", &Player::removeActionButton)
				.def("SendInitialActionButtons", &Player::SendInitialActionButtons)
				.def("GetActionButtons", &Player::GetActionButtons)
				.def("UpdatePvP", &Player::UpdatePvP)
				.def("IsFFAPvP", &Player::IsFFAPvP)
				.def("SetFFAPvP", &Player::SetFFAPvP)
				.def("UpdateZone", &Player::UpdateZone)
				.def("UpdateArea", &Player::UpdateArea)
				.def("GetCachedZoneId", &Player::GetCachedZoneId)
				.def("UpdateZoneDependentAuras", &Player::UpdateZoneDependentAuras)
				.def("UpdateAreaDependentAuras", &Player::UpdateAreaDependentAuras)
				.def("UpdatePvPFlag", &Player::UpdatePvPFlag)
				.def("UpdateContestedPvP", &Player::UpdateContestedPvP)
				.def("SetContestedPvPTimer", &Player::SetContestedPvPTimer)
				.def("ResetContestedPvP", &Player::ResetContestedPvP)
				.def("clearUnitState", &Player::clearUnitState)
				.def("RemoveFlag", &Player::RemoveFlag)
				.def("IsInDuelWith", &Player::IsInDuelWith)
				.def("UpdateDuelFlag", &Player::UpdateDuelFlag)
				.def("CheckDuelDistance", &Player::CheckDuelDistance)
				.def("DuelComplete", &Player::DuelComplete)
				.def("SendDuelCountdown", &Player::SendDuelCountdown)
				.def("IsGroupVisibleFor", &Player::IsGroupVisibleFor)
				.def("IsInSameGroupWith", &Player::IsInSameGroupWith)
				.def("IsInSameRaidWith", &Player::IsInSameRaidWith)
				.def("UninviteFromGroup", &Player::UninviteFromGroup)
				.def("RemoveFromGroup", static_cast<void(Player::*)()>(&Player::RemoveFromGroup))
				.def("SendUpdateToOutOfRangeGroupMembers", &Player::SendUpdateToOutOfRangeGroupMembers)
				.def("SetInGuild", &Player::SetInGuild)
				.def("SetRank", &Player::SetRank)
				.def("SetGuildIdInvited", &Player::SetGuildIdInvited)
				.def("GetGuildId", &Player::GetGuildId)
				.def("GetGuildIdFromDB", &Player::GetGuildIdFromDB)
				.def("GetRank", &Player::GetRank)
				.def("GetRankFromDB", &Player::GetRankFromDB)
				.def("GetGuildIdInvited", &Player::GetGuildIdInvited)
				.def("RemovePetitionsAndSigns", &Player::RemovePetitionsAndSigns)
				.def("UpdateSkill", &Player::UpdateSkill)
				.def("UpdateSkillPro", &Player::UpdateSkillPro)
				.def("UpdateCraftSkill", &Player::UpdateCraftSkill)
				.def("UpdateGatherSkill", &Player::UpdateGatherSkill)
				.def("UpdateFishingSkill", &Player::UpdateFishingSkill)
				.def("GetBaseDefenseSkillValue", &Player::GetBaseDefenseSkillValue)
				.def("GetBaseWeaponSkillValue", &Player::GetBaseWeaponSkillValue)
				//.def("GetSpellByProto", &Player::GetSpellByProto)
				.def("GetHealthBonusFromStamina", &Player::GetHealthBonusFromStamina)
				.def("GetManaBonusFromIntellect", &Player::GetManaBonusFromIntellect)
				.def("UpdateStats", &Player::UpdateStats)
				.def("UpdateAllStats", &Player::UpdateAllStats)
				.def("UpdateResistances", &Player::UpdateResistances)
				.def("UpdateArmor", &Player::UpdateArmor)
				.def("UpdateMaxHealth", &Player::UpdateMaxHealth)
				.def("UpdateMaxPower", &Player::UpdateMaxPower)
				.def("UpdateAttackPowerAndDamage", &Player::UpdateAttackPowerAndDamage)
				.def("UpdateDamagePhysical", &Player::UpdateDamagePhysical)
				.def("UpdateSpellDamageAndHealingBonus", &Player::UpdateSpellDamageAndHealingBonus)
				.def("CalculateMinMaxDamage", &Player::CalculateMinMaxDamage)
				.def("UpdateDefenseBonusesMod", &Player::UpdateDefenseBonusesMod)
				.def("GetMeleeCritFromAgility", &Player::GetMeleeCritFromAgility)
				.def("GetDodgeFromAgility", &Player::GetDodgeFromAgility)
				.def("GetSpellCritFromIntellect", &Player::GetSpellCritFromIntellect)
				.def("OCTRegenHPPerSpirit", &Player::OCTRegenHPPerSpirit)
				.def("OCTRegenMPPerSpirit", &Player::OCTRegenMPPerSpirit)
				.def("UpdateBlockPercentage", &Player::UpdateBlockPercentage)
				.def("UpdateCritPercentage", &Player::UpdateCritPercentage)
				.def("UpdateAllCritPercentages", &Player::UpdateAllCritPercentages)
				.def("UpdateParryPercentage", &Player::UpdateParryPercentage)
				.def("UpdateDodgePercentage", &Player::UpdateDodgePercentage)
				.def("UpdateAllSpellCritChances", &Player::UpdateAllSpellCritChances)
				.def("UpdateSpellCritChance", &Player::UpdateSpellCritChance)
				.def("UpdateManaRegen", &Player::UpdateManaRegen)
				.def("GetLootGuid", &Player::GetLootGuid)
				.def("SetLootGuid", &Player::SetLootGuid)
				.def("RemovedInsignia", &Player::RemovedInsignia)
				.def("GetSession", &Player::GetSession)
				.def("SetSession", &Player::SetSession)
				.def("BuildCreateUpdateBlockForPlayer", &Player::BuildCreateUpdateBlockForPlayer)
				.def("DestroyForPlayer", &Player::DestroyForPlayer)
				.def("SendLogXPGain", &Player::SendLogXPGain)
				.def("LastSwingErrorMsg", &Player::LastSwingErrorMsg)
				.def("SwingErrorMsg", &Player::SwingErrorMsg)
				.def("SendAttackSwingCantAttack", &Player::SendAttackSwingCantAttack)
				.def("SendAttackSwingCancelAttack", &Player::SendAttackSwingCancelAttack)
				.def("SendAttackSwingDeadTarget", &Player::SendAttackSwingDeadTarget)
				.def("SendAttackSwingNotStanding", &Player::SendAttackSwingNotStanding)
				.def("SendAttackSwingNotInRange", &Player::SendAttackSwingNotInRange)
				.def("SendAttackSwingBadFacingAttack", &Player::SendAttackSwingBadFacingAttack)
				.def("SendAutoRepeatCancel", &Player::SendAutoRepeatCancel)
				.def("SendExplorationExperience", &Player::SendExplorationExperience)
				.def("ResetInstances", &Player::ResetInstances)
				.def("SendResetInstanceSuccess", &Player::SendResetInstanceSuccess)
				.def("SendResetInstanceFailed", &Player::SendResetInstanceFailed)
				.def("SendResetFailedNotify", &Player::SendResetFailedNotify)
				.def("SetPosition", &Player::SetPosition)
				.def("UpdateUnderwaterState", &Player::UpdateUnderwaterState)
				.def("SendMessageToSet", &Player::SendMessageToSet)
				.def("SendMessageToSetInRange", static_cast<void(Player::*)(WorldPacket*, float, bool)>(&Player::SendMessageToSetInRange))
				.def("SendMessageToSetInRange", static_cast<void(Player::*)(WorldPacket*, float, bool, bool)>(&Player::SendMessageToSetInRange))
				.def("GetCorpse", &Player::GetCorpse)
				.def("SpawnCorpseBones", &Player::SpawnCorpseBones)
				.def("CreateCorpse", &Player::CreateCorpse)
				.def("KillPlayer", &Player::KillPlayer)
				.def("GetResurrectionSpellId", &Player::GetResurrectionSpellId)
				.def("ResurrectPlayer", &Player::ResurrectPlayer)
				.def("BuildPlayerRepop", &Player::BuildPlayerRepop)
				.def("RepopAtGraveyard", &Player::RepopAtGraveyard)
				.def("DurabilityLossAll", &Player::DurabilityLossAll)
				.def("DurabilityLoss", &Player::DurabilityLoss)
				.def("DurabilityPointsLossAll", &Player::DurabilityPointsLossAll)
				.def("DurabilityPointsLoss", &Player::DurabilityPointsLoss)
				.def("DurabilityPointLossForEquipSlot", &Player::DurabilityPointLossForEquipSlot)
				.def("DurabilityRepairAll", &Player::DurabilityRepairAll)
				.def("DurabilityRepair", &Player::DurabilityRepair)
				.def("UpdateMirrorTimers", &Player::UpdateMirrorTimers)
				.def("StopMirrorTimers", &Player::StopMirrorTimers)
				.def("SetRoot", &Player::SetRoot)
				.def("SetWaterWalk", &Player::SetWaterWalk)
				.def("SetCharmed", &Player::SetCharmed)
				.def("JoinedChannel", &Player::JoinedChannel)
				.def("LeftChannel", &Player::LeftChannel)
				.def("CleanupChannels", &Player::CleanupChannels)
				.def("UpdateLocalChannels", &Player::UpdateLocalChannels)
				.def("LeaveLFGChannel", &Player::LeaveLFGChannel)
				.def("UpdateDefense", &Player::UpdateDefense)
				.def("UpdateCombatSkills", &Player::UpdateCombatSkills)
				.def("SetSkill", &Player::SetSkill)
				.def("GetMaxSkillValue", &Player::GetMaxSkillValue)
				.def("GetPureMaxSkillValue", &Player::GetPureMaxSkillValue)
				.def("GetSkillValue", &Player::GetSkillValue)
				.def("GetBaseSkillValue", &Player::GetBaseSkillValue)
				.def("GetPureSkillValue", &Player::GetPureSkillValue)
				.def("GetSkillPermBonusValue", &Player::GetSkillPermBonusValue)
				.def("GetSkillTempBonusValue", &Player::GetSkillTempBonusValue)
				.def("HasSkill", &Player::HasSkill)
				.def("learnSkillRewardedSpells", &Player::learnSkillRewardedSpells)
				.def("GetTeleportDest", &Player::GetTeleportDest)
				.def("IsBeingTeleported", &Player::IsBeingTeleported)
				.def("IsBeingTeleportedNear", &Player::IsBeingTeleportedNear)
				.def("IsBeingTeleportedFar", &Player::IsBeingTeleportedFar)
				.def("SetSemaphoreTeleportNear", &Player::SetSemaphoreTeleportNear)
				.def("SetSemaphoreTeleportFar", &Player::SetSemaphoreTeleportFar)
				.def("ProcessDelayedOperations", &Player::ProcessDelayedOperations)
				.def("CheckAreaExploreAndOutdoor", &Player::CheckAreaExploreAndOutdoor)
				.def("TeamForRace", &Player::TeamForRace)
				.def("GetTeam", &Player::GetTeam)
				.def("GetTeamId", &Player::GetTeamId)
				.def("getFactionForRace", &Player::getFactionForRace)
				.def("setFactionForRace", &Player::setFactionForRace)
				.def("InitDisplayIds", &Player::InitDisplayIds)
				.def("IsAtGroupRewardDistance", &Player::IsAtGroupRewardDistance)
				.def("RewardSinglePlayerAtKill", &Player::RewardSinglePlayerAtKill)
				.def("RewardPlayerAndGroupAtEvent", &Player::RewardPlayerAndGroupAtEvent)
				.def("RewardPlayerAndGroupAtCast", &Player::RewardPlayerAndGroupAtCast)
				.def("isHonorOrXPTarget", &Player::isHonorOrXPTarget)
				.def("GetReputationMgr", static_cast<ReputationMgr const&(Player::*)() const>(&Player::GetReputationMgr))
				.def("GetReputationMgr", static_cast<ReputationMgr&(Player::*)()>(&Player::GetReputationMgr))
				.def("GetReputationRank", &Player::GetReputationRank)
				.def("RewardReputation", static_cast<void(Player::*)(Unit*, float)>(&Player::RewardReputation))
				.def("RewardReputation", static_cast<void(Player::*)(Quest const *)>(&Player::RewardReputation))
				.def("CalculateReputationGain", &Player::CalculateReputationGain)
				.def("UpdateSkillsForLevel", &Player::UpdateSkillsForLevel)
				.def("UpdateSkillsToMaxSkillsForLevel", &Player::UpdateSkillsToMaxSkillsForLevel)
				.def("ModifySkillBonus", &Player::ModifySkillBonus)
				.def("AddHonorCP", &Player::AddHonorCP)
				.def("UpdateHonor", &Player::UpdateHonor)
				.def("ResetHonor", &Player::ResetHonor)
				.def("ClearHonorInfo", &Player::ClearHonorInfo)
				.def("RewardHonor", &Player::RewardHonor)
				.def("isKill", &Player::isKill)
				.def("CalculateTotalKills", &Player::CalculateTotalKills)
				.def("GetHonorRankInfo", &Player::GetHonorRankInfo)
				.def("GetHonorHighestRankInfo", &Player::GetHonorHighestRankInfo)
				.def("SetHonorHighestRankInfo", &Player::SetHonorHighestRankInfo)
				.def("GetStoredHonor", &Player::GetStoredHonor)
				.def("SetStoredHonor", &Player::SetStoredHonor)
				.def("GetHonorStoredKills", &Player::GetHonorStoredKills)
				.def("SetHonorStoredKills", &Player::SetHonorStoredKills)
				.def("GetHonorLastWeekStandingPos", &Player::GetHonorLastWeekStandingPos)
				.def("SetHonorLastWeekStandingPos", &Player::SetHonorLastWeekStandingPos)
				.def("SetDrunkValue", &Player::SetDrunkValue)
				.def("GetDrunkValue", &Player::GetDrunkValue)
				.def("GetDrunkenstateByValue", &Player::GetDrunkenstateByValue)
				.def("GetDeathTimer", &Player::GetDeathTimer)
				.def("GetCorpseReclaimDelay", &Player::GetCorpseReclaimDelay)
				.def("UpdateCorpseReclaimDelay", &Player::UpdateCorpseReclaimDelay)
				.def("SendCorpseReclaimDelay", &Player::SendCorpseReclaimDelay)
				.def("GetShieldBlockValue", &Player::GetShieldBlockValue)
				.def("CanParry", &Player::CanParry)
				.def("SetCanParry", &Player::SetCanParry)
				.def("CanBlock", &Player::CanBlock)
				.def("SetCanBlock", &Player::SetCanBlock)
				.def("CanDualWield", &Player::CanDualWield)
				.def("SetCanDualWield", &Player::SetCanDualWield)
				.def("InitStatBuffMods", &Player::InitStatBuffMods)
				.def("ApplyStatBuffMod", &Player::ApplyStatBuffMod)
				.def("ApplyStatPercentBuffMod", &Player::ApplyStatPercentBuffMod)
				.def("ApplyPercentModFloatValue", &Player::ApplyPercentModFloatValue)
				.def("ApplyPercentModFloatValue", &Player::ApplyPercentModFloatValue)
				.def("GetPosStat", &Player::GetPosStat)
				.def("GetNegStat", &Player::GetNegStat)
				.def("GetResistanceBuffMods", &Player::GetResistanceBuffMods)
				.def("SetResistanceBuffMods", &Player::SetResistanceBuffMods)
				.def("ApplyResistanceBuffModsMod", &Player::ApplyResistanceBuffModsMod)
				.def("ApplyResistanceBuffModsPercentMod", &Player::ApplyResistanceBuffModsPercentMod)
				.def("SetRegularAttackTime", &Player::SetRegularAttackTime)
				.def("SetBaseModValue", &Player::SetBaseModValue)
				.def("HandleBaseModValue", &Player::HandleBaseModValue)
				.def("GetBaseModValue", &Player::GetBaseModValue)
				.def("GetTotalBaseModValue", &Player::GetTotalBaseModValue)
				.def("GetTotalPercentageModValue", &Player::GetTotalPercentageModValue)
				.def("_ApplyAllStatBonuses", &Player::_ApplyAllStatBonuses)
				.def("_RemoveAllStatBonuses", &Player::_RemoveAllStatBonuses)
				.def("_ApplyWeaponDependentAuraMods", &Player::_ApplyWeaponDependentAuraMods)
				.def("_ApplyWeaponDependentAuraCritMod", &Player::_ApplyWeaponDependentAuraCritMod)
				.def("_ApplyWeaponDependentAuraDamageMod", &Player::_ApplyWeaponDependentAuraDamageMod)
				.def("_ApplyItemMods", &Player::_ApplyItemMods)
				.def("_RemoveAllItemMods", &Player::_RemoveAllItemMods)
				.def("_ApplyAllItemMods", &Player::_ApplyAllItemMods)
				.def("_ApplyItemBonuses", &Player::_ApplyItemBonuses)
				.def("_ApplyAmmoBonuses", &Player::_ApplyAmmoBonuses)
				.def("InitDataForForm", &Player::InitDataForForm)
				.def("ApplyItemEquipSpell", &Player::ApplyItemEquipSpell)
				.def("ApplyEquipSpell", &Player::ApplyEquipSpell)
				.def("UpdateEquipSpellsAtFormChange", &Player::UpdateEquipSpellsAtFormChange)
				.def("CastItemCombatSpell", &Player::CastItemCombatSpell)
				.def("CastItemUseSpell", &Player::CastItemUseSpell)
				.def("SendInitWorldStates", &Player::SendInitWorldStates)
				.def("SendUpdateWorldState", &Player::SendUpdateWorldState)
				.def("SendDirectMessage", &Player::SendDirectMessage)
				.def("SendAuraDurationsForTarget", &Player::SendAuraDurationsForTarget)
				.def("SendLoot", &Player::SendLoot)
				.def("SendLootRelease", &Player::SendLootRelease)
				.def("SendNotifyLootItemRemoved", &Player::SendNotifyLootItemRemoved)
				.def("SendNotifyLootMoneyRemoved", &Player::SendNotifyLootMoneyRemoved)
				.def("InBattleGround", &Player::InBattleGround)
				//.def("InArena", &Player::InArena)
				.def("GetBattleGroundId", &Player::GetBattleGroundId)
				.def("GetBattleGroundTypeId", &Player::GetBattleGroundTypeId)
				.def("GetBattleGround", &Player::GetBattleGround)
				.def("GetMinLevelForBattleGroundBracketId", &Player::GetMinLevelForBattleGroundBracketId)
				.def("GetMaxLevelForBattleGroundBracketId", &Player::GetMaxLevelForBattleGroundBracketId)
				.def("GetBattleGroundBracketIdFromLevel", &Player::GetBattleGroundBracketIdFromLevel)
				.def("InBattleGroundQueue", &Player::InBattleGroundQueue)
				.def("GetBattleGroundQueueTypeId", &Player::GetBattleGroundQueueTypeId)
				.def("GetBattleGroundQueueIndex", &Player::GetBattleGroundQueueIndex)
				.def("IsInvitedForBattleGroundQueueType", &Player::IsInvitedForBattleGroundQueueType)
				.def("InBattleGroundQueueForBattleGroundQueueType", &Player::InBattleGroundQueueForBattleGroundQueueType)
				.def("SetBattleGroundId", &Player::SetBattleGroundId)
				.def("AddBattleGroundQueueId", &Player::AddBattleGroundQueueId)
				.def("HasFreeBattleGroundQueueId", &Player::HasFreeBattleGroundQueueId)
				.def("RemoveBattleGroundQueueId", &Player::RemoveBattleGroundQueueId)
				.def("SetInviteForBattleGroundQueueType", &Player::SetInviteForBattleGroundQueueType)
				.def("IsInvitedForBattleGroundInstance", &Player::IsInvitedForBattleGroundInstance)
				.def("GetBattleGroundEntryPoint", &Player::GetBattleGroundEntryPoint)
				.def("SetBattleGroundEntryPoint", &Player::SetBattleGroundEntryPoint)
				.def("SetBGTeam", &Player::SetBGTeam)
				.def("GetBGTeam", &Player::GetBGTeam)
				.def("LeaveBattleground", &Player::LeaveBattleground)
				.def("CanJoinToBattleground", &Player::CanJoinToBattleground)
				.def("GetBGAccessByLevel", &Player::GetBGAccessByLevel)
				.def("CanUseBattleGroundObject", &Player::CanUseBattleGroundObject)
				.def("isTotalImmune", &Player::isTotalImmune)
				.def("CanUseCapturePoint", &Player::CanUseCapturePoint)
//				.def("GetOutdoorPvP", &Player::GetOutdoorPvP)
				.def("IsOutdoorPvPActive", &Player::IsOutdoorPvPActive)
				.def("isRested", &Player::isRested)
				.def("GetXPRestBonus", &Player::GetXPRestBonus)
				.def("GetRestTime", &Player::GetRestTime)
				.def("SetRestTime", &Player::SetRestTime)
				.def("EnvironmentalDamage", &Player::EnvironmentalDamage)
				.def("UpdateSpeakTime", &Player::UpdateSpeakTime)
				.def("CanSpeak", &Player::CanSpeak)
				//.def("ChangeSpeakTime", &Player::ChangeSpeakTime)
				.def("HasMovementFlag", &Player::HasMovementFlag)
				.def("UpdateFallInformationIfNeed", &Player::UpdateFallInformationIfNeed)
				.def("SetFallInformation", &Player::SetFallInformation)
				.def("HandleFall", &Player::HandleFall)
				.def("BuildTeleportAckMsg", &Player::BuildTeleportAckMsg)
				.def("isMoving", &Player::isMoving)
				.def("isMovingOrTurning", &Player::isMovingOrTurning)
				.def("SetClientControl", &Player::SetClientControl)
				.def("SetMover", &Player::SetMover)
				.def("GetMover", &Player::GetMover)
				.def("IsSelfMover", &Player::IsSelfMover)
				.def("GetFarSightGuid", &Player::GetFarSightGuid)
//				.def("GetTransport", &Player::GetTransport)
				.def("SetTransport", &Player::SetTransport)
				.def("GetTransOffsetX", &Player::GetTransOffsetX)
				.def("GetTransOffsetY", &Player::GetTransOffsetY)
				.def("GetTransOffsetZ", &Player::GetTransOffsetZ)
				.def("GetTransOffsetO", &Player::GetTransOffsetO)
				.def("GetTransTime", &Player::GetTransTime)
				.def("GetSaveTimer", &Player::GetSaveTimer)
				.def("SetSaveTimer", &Player::SetSaveTimer)
				.def("SaveRecallPosition", &Player::SaveRecallPosition)
				.def("SetHomebindToLocation", &Player::SetHomebindToLocation)
				.def("RelocateToHomebind", &Player::RelocateToHomebind)
				.def("TeleportToHomebind", &Player::TeleportToHomebind)
				.def("GetObjectByTypeMask", &Player::GetObjectByTypeMask)
				.def("HaveAtClient", &Player::HaveAtClient)
				.def("IsVisibleInGridForPlayer", &Player::IsVisibleInGridForPlayer)
				.def("IsVisibleGloballyFor", &Player::IsVisibleGloballyFor)
				.def("UpdateVisibilityOf", &Player::UpdateVisibilityOf)
				.def("UpdateVisibilityOf", &Player::UpdateVisibilityOf)
				.def("HandleStealthedUnitsDetection", &Player::HandleStealthedUnitsDetection)
				.def("GetCamera", &Player::GetCamera)
				.def("HasAtLoginFlag", &Player::HasAtLoginFlag)
				.def("SetAtLoginFlag", &Player::SetAtLoginFlag)
				.def("RemoveAtLoginFlag", &Player::RemoveAtLoginFlag)
				.def("GetTemporaryUnsummonedPetNumber", &Player::GetTemporaryUnsummonedPetNumber)
				.def("SetTemporaryUnsummonedPetNumber", &Player::SetTemporaryUnsummonedPetNumber)
				.def("UnsummonPetTemporaryIfAny", &Player::UnsummonPetTemporaryIfAny)
				.def("ResummonPetTemporaryUnSummonedIfAny", &Player::ResummonPetTemporaryUnSummonedIfAny)
				.def("IsPetNeedBeTemporaryUnsummoned", &Player::IsPetNeedBeTemporaryUnsummoned)
				.def("SendCinematicStart", &Player::SendCinematicStart)
				.def("UpdateHomebindTime", &Player::UpdateHomebindTime)
				.def("GetBoundInstance", &Player::GetBoundInstance)
				.def("GetBoundInstances", &Player::GetBoundInstances)
				.def("UnbindInstance", static_cast<void(Player::*)(uint32, bool)>(&Player::UnbindInstance))
				.def("UnbindInstance", static_cast<void(Player::*)(Player::BoundInstancesMap::iterator &, bool)>(&Player::UnbindInstance))
				.def("BindToInstance", &Player::BindToInstance)
				.def("SendRaidInfo", &Player::SendRaidInfo)
				.def("SendSavedInstances", &Player::SendSavedInstances)
				.def("ConvertInstancesToGroup", &Player::ConvertInstancesToGroup)
				.def("GetBoundInstanceSaveForSelfOrGroup", &Player::GetBoundInstanceSaveForSelfOrGroup)
				.def("GetLastPetNumber", &Player::GetLastPetNumber)
				.def("SetLastPetNumber", &Player::SetLastPetNumber)
				.def("GetGroupInvite", &Player::GetGroupInvite)
				.def("SetGroupInvite", &Player::SetGroupInvite)
				.def("GetGroup", static_cast<Group *(Player::*)()>(&Player::GetGroup))
				.def("GetGroup", static_cast<Group const*(Player::*)() const>(&Player::GetGroup))
				.def("GetGroupRef", &Player::GetGroupRef)
				.def("SetGroup", &Player::SetGroup)
				.def("GetSubGroup", &Player::GetSubGroup)
				.def("GetGroupUpdateFlag", &Player::GetGroupUpdateFlag)
				.def("SetGroupUpdateFlag", &Player::SetGroupUpdateFlag)
				.def("GetAuraUpdateMask", &Player::GetAuraUpdateMask)
				.def("SetAuraUpdateMask", &Player::SetAuraUpdateMask)
				.def("GetNextRandomRaidMember", &Player::GetNextRandomRaidMember)
				.def("CanUninviteFromGroup", &Player::CanUninviteFromGroup)
				//.def("CheckMeetingStoneValidity", &Player::CheckMeetingStoneValidity)
				.def("AttemptJoin", &Player::AttemptJoin)
				.def("IsInMeetingStoneQueue", &Player::IsInMeetingStoneQueue)
				.def("IsInMeetingStoneQueueForInstanceId", &Player::IsInMeetingStoneQueueForInstanceId)
				.def("GetPlayersInMeetingStoneQueueForInstanceId", &Player::GetPlayersInMeetingStoneQueueForInstanceId)
				.def("GetSizeOfMeetingStoneQueueForInstanceId", &Player::GetSizeOfMeetingStoneQueueForInstanceId)
				.def("GetAreaIdInMeetingStoneQueue", &Player::GetAreaIdInMeetingStoneQueue)
				.def("GetTimeInMeetingStoneQueue", &Player::GetTimeInMeetingStoneQueue)
				.def("GetMeetingStoneQueueDungeonName", &Player::GetMeetingStoneQueueDungeonName)
				.def("AddToMeetingStoneQueue", &Player::AddToMeetingStoneQueue)
				.def("RemoveFromMeetingStoneQueue", &Player::RemoveFromMeetingStoneQueue)
				//.def("SendMeetingStoneLeave", &Player::SendMeetingStoneLeave)
				.def("SetBattleGroundRaid", &Player::SetBattleGroundRaid)
				.def("RemoveFromBattleGroundRaid", &Player::RemoveFromBattleGroundRaid)
				.def("GetOriginalGroup", &Player::GetOriginalGroup)
				.def("GetOriginalGroupRef", &Player::GetOriginalGroupRef)
				.def("GetOriginalSubGroup", &Player::GetOriginalSubGroup)
				.def("SetOriginalGroup", &Player::SetOriginalGroup)
				.def("GetGridRef", &Player::GetGridRef)
				.def("GetMapRef", &Player::GetMapRef)
				//.def("isTappedByMeOrMyGroup", &Player::isTappedByMeOrMyGroup)
				.def("isAllowedToLoot", &Player::isAllowedToLoot)
			];
		}
	}
}